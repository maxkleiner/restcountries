Version:0.9
StartHTML:0000000105
EndHTML:0000182239
StartFragment:0000000141
EndFragment:0000182203
<html>
<head>
<meta charset="utf-8">
</head>
<body>
<!--StartFragment--><div style="font-family: Courier New, 'Courier New', monospace; font-size: 12pt; white-space: pre; "><div><span style="color: #000080; font-style: italic; ">//****************Shell&nbsp;REST&nbsp;API&nbsp;Tester**************************&nbsp;&nbsp;&nbsp;üêû</span></div><div><span style="color: #000080; font-weight: bold; ">program</span><span>&nbsp;RESTcountries_Composer1_64bit_UC_51</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-style: italic; ">//https://software.hixie.ch/utilities/cgi/unicode-decoder/utf8-decoder<br><br>//API&nbsp;Endpoints&nbsp;v3&nbsp;‚òÆ&nbsp;‚úû&nbsp;œÄ&nbsp;üìå<br>//https://restcountries.com/<br><br>//http://www.softwareschule.ch/examples/alhttpclient2.txt<br>//http://www.softwareschule.ch/examples/maxbox_functions.txt<br>//http://www.softwareschule.ch/examples/maxbox_functions_sort.txt<br>//https://github.com/apilayer/restcountries<br>//http://www.softwareschule.ch/examples/json7.txt<br>//https://gist.github.com/felipecaputo/535541dd7cfd06b5070844375fc16aa4<br>//http://www.softwareschule.ch/examples/jsonlib.htm<br></span></div><div><span style="color: #000080; font-weight: bold; ">Const</span><span>&nbsp;<br>&nbsp;&nbsp;WeatherAPIKEY</span><span style="color: #FF0000; ">=</span><span style="color: #008080; ">'55013bf3d09cfb0619989a00ed5bed09'</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;URLWeatherAPI</span><span style="color: #FF0000; ">=</span><span style="color: #008080; ">'https://api.openweathermap.org/data/2.5/weather?q=%s&amp;units=metric&amp;appid=%s'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;RESTCountries&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #008080; ">'https://restcountries.com/v3.1/name/%s'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;RESTCountriesC&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #008080; ">'https://restcountries.com/v2/capital/%s'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;<br>&nbsp;JSONDATA&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//''''''+LF+</span></div><div><span>&nbsp;</span><span style="color: #008080; ">'['</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//'&nbsp;&nbsp;{&quot;official&quot;:&quot;√ò¬ß√ô‚Äû√ò¬ß√ò¬™√ò√ò¬ß√ò¬Ø&nbsp;√ò¬ß√ô‚Äû√ò¬≥√ôÀÜ√ô≈†√ò¬≥√ò¬±√ô≈†&quot;,&quot;common&quot;:&quot;√ò¬≥√ôÀÜ√ô≈†√ò¬≥√ò¬±√ò¬ß&quot;}'+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'{&quot;official&quot;:&quot;Kengevredad&nbsp;Suis&quot;,&quot;common&quot;:&quot;Suis&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span>&nbsp;</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//'&nbsp;&nbsp;{&quot;official&quot;:&quot;√Ö&nbsp;v√É¬Ωcarsk√É¬°&nbsp;konfederace&quot;,&quot;common&quot;,&quot;√Ö&nbsp;v√É¬Ωcarsko&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;{&quot;official&quot;:&quot;Swiss&nbsp;Confederation&quot;,&quot;common&quot;:&quot;Switzerland&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//'&nbsp;&nbsp;{&quot;official&quot;:&quot;√Ö&nbsp;veitsi&nbsp;Konf√É¬∂deratsioon&quot;,&quot;common&quot;:&quot;√Ö&nbsp;veits&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;{&quot;official&quot;:&quot;Sveitsin&nbsp;valaliitto&quot;,&quot;common&quot;:&quot;Sveitsi&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;{&quot;official&quot;:&quot;Conf√É¬©d√É¬©ration&nbsp;suisse&quot;,&quot;common&quot;:&quot;Suisse&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//'&nbsp;&nbsp;{&quot;official&quot;:&quot;√Ö¬°vicarska&nbsp;Konfederacija&quot;,&quot;common&quot;:&quot;√Ö&nbsp;vicarska&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;{&quot;official&quot;:&quot;Sv√É¬°jc&quot;,&quot;common&quot;:&quot;Sv√É¬°jc&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;{&quot;official&quot;:&quot;Confederazione&nbsp;svizzera&quot;,&quot;common&quot;:&quot;Svizzera&quot;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">']'</span><span style="color: #FF0000; ">;</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//+LF+//;&nbsp;//+LF+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//'''''';</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;JSONDATA2&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//''''''+LF+</span></div><div><span>&nbsp;</span><span style="color: #008080; ">'['</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;{&quot;official&quot;:&quot;√ò¬ß√ô‚Äû√ò¬ß√ò¬™√ò√ò¬ß√ò¬Ø&nbsp;√ò¬ß√ô‚Äû√ò¬≥√ôÀÜ√ô≈†√ò¬≥√ò¬±√ô≈†&quot;,&quot;common&quot;:&quot;√ò¬≥√ôÀÜ√ô≈†√ò¬≥√ò¬±√ò¬ß&quot;},'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;{&quot;official&quot;:&quot;Kengevredad&nbsp;Suis&quot;,&quot;common&quot;:&quot;Suis&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;{&quot;official&quot;:&quot;√Ö&nbsp;v√É¬Ωcarsk√É¬°&nbsp;konfederace&quot;,&quot;common&quot;:&quot;√Ö&nbsp;v√É¬Ωcarsko&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;{&quot;official&quot;:&quot;Swiss&nbsp;Confederation&quot;,&quot;common&quot;:&quot;Switzerland&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;{&quot;official&quot;:&quot;√Ö&nbsp;veitsi&nbsp;Konf√É¬∂deratsioon&quot;,&quot;common&quot;:&quot;√Ö&nbsp;veits&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;{&quot;official&quot;:&quot;Sveitsin&nbsp;valaliitto&quot;,&quot;common&quot;:&quot;Sveitsi&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;{&quot;official&quot;:&quot;Conf√É¬©d√É¬©ration&nbsp;suisse&quot;,&quot;common&quot;:&quot;Suisse&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;{&quot;official&quot;:&quot;√Ö¬°vicarska&nbsp;Konfederacija&quot;,&quot;common&quot;:&quot;√Ö&nbsp;vicarska&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;{&quot;official&quot;:&quot;Sv√É¬°jc&quot;,&quot;common&quot;:&quot;Sv√É¬°jc&quot;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;{&quot;official&quot;:&quot;Confederazione&nbsp;svizzera&quot;,&quot;common&quot;:&quot;Svizzera&quot;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">']'</span><span style="color: #FF0000; ">;</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//+LF+//;&nbsp;//+LF+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//'''''';</span></div><div><span>&nbsp;&nbsp;</span></div><div><span style="color: #000080; font-weight: bold; ">function</span><span>&nbsp;GetWeatherStreamJSON</span><span style="color: #FF0000; ">(</span><span style="color: #000080; font-weight: bold; ">const</span><span>&nbsp;Data</span><span style="color: #FF0000; ">,</span><span>&nbsp;APIKEY</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">):</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">var</span><span>&nbsp;encodURL</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;mapStrm</span><span style="color: #FF0000; ">:</span><span>&nbsp;TStringStream</span><span style="color: #FF0000; ">;</span><span>&nbsp;jo</span><span style="color: #FF0000; ">:</span><span>&nbsp;TJSONObject</span><span style="color: #FF0000; ">;</span><span>&nbsp;</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;encodURL</span><span style="color: #FF0000; ">:=</span><span>&nbsp;Format</span><span style="color: #FF0000; ">(</span><span>URLWeatherAPI</span><span style="color: #FF0000; ">,[</span><span>HTTPEncode</span><span style="color: #FF0000; ">(</span><span>Data</span><span style="color: #FF0000; ">),</span><span>&nbsp;APIKEY</span><span style="color: #FF0000; ">]);</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;mapStrm</span><span style="color: #FF0000; ">:=</span><span>&nbsp;TStringStream</span><span style="color: #FF0000; ">.</span><span>create</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">''</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;HttpGet</span><span style="color: #FF0000; ">(</span><span>EncodURL</span><span style="color: #FF0000; ">,</span><span>&nbsp;mapStrm</span><span style="color: #FF0000; ">);</span><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//WinInet</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;mapStrm</span><span style="color: #FF0000; ">.</span><span>Position</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;jo</span><span style="color: #FF0000; ">:=</span><span>&nbsp;TJSONObject</span><span style="color: #FF0000; ">.</span><span>Create4</span><span style="color: #FF0000; ">(</span><span>mapStrm</span><span style="color: #FF0000; ">.</span><span>datastring</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;result</span><span style="color: #FF0000; ">:=</span><span>&nbsp;jo</span><span style="color: #FF0000; ">.</span><span>getjsonarray</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'weather'</span><span style="color: #FF0000; ">).</span><span>getjsonobject</span><span style="color: #FF0000; ">(0).</span><span>getstring</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'description'</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;result</span><span style="color: #FF0000; ">:=</span><span>&nbsp;result</span><span style="color: #FF0000; ">+</span><span style="color: #008080; ">'&nbsp;'</span><span style="color: #FF0000; ">+</span><span>jo</span><span style="color: #FF0000; ">.</span><span>getjsonobject</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'main'</span><span style="color: #FF0000; ">).</span><span>getstring</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'temp'</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">except</span><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'Error:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>mapstrm</span><span style="color: #FF0000; ">.</span><span>datastring</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'E:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>ExceptiontoString</span><span style="color: #FF0000; ">(</span><span>exceptiontype</span><span style="color: #FF0000; ">,</span><span>&nbsp;exceptionparam</span><span style="color: #FF0000; ">));</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">finally</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;mapStrm</span><span style="color: #FF0000; ">.</span><span>Free</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;encodURL</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">''</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;jo</span><span style="color: #FF0000; ">.</span><span>Free</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-weight: bold; ">const</span><span>&nbsp;HIDDENT</span><span style="color: #FF0000; ">=</span><span style="color: #008080; ">'&quot;flag&quot;:&nbsp;&quot;https://flagcdn.com/ch.svg&quot;,'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&quot;regionalBlocs&quot;:&nbsp;[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;&nbsp;&quot;acronym&quot;:&nbsp;&quot;EFTA&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;&nbsp;&quot;name&quot;:&nbsp;&quot;European&nbsp;Free&nbsp;Trade&nbsp;Association&quot;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'],&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&quot;cioc&quot;:&nbsp;&quot;SUI&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&quot;independent&quot;:&nbsp;true&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;</span><span style="color: #008080; ">'}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-style: italic; ">//private&nbsp;final&nbsp;static&nbsp;String&nbsp;JSON_TEST_DATA</span></div><div><span style="color: #000080; font-weight: bold; ">const</span><span>&nbsp;HIDDENT3</span><span style="color: #FF0000; ">=</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'{'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†\&quot;tms_guid\&quot;:&nbsp;\&quot;9LaHmoHpmTd811R\&quot;,&nbsp;'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†\&quot;recharge_status\&quot;:&nbsp;\&quot;100\&quot;,&nbsp;'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†\&quot;message\&quot;:&nbsp;\&quot;Transaction&nbsp;Successful\&quot;,&nbsp;'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†\&quot;response_time\&quot;:&nbsp;{&nbsp;'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†¬†¬†¬†\&quot;verifyClient\&quot;:&nbsp;0.0281,&nbsp;'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†¬†¬†¬†\&quot;verifyGuid\&quot;:&nbsp;0.8695,&nbsp;'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†¬†¬†¬†\&quot;verifyOperator\&quot;:&nbsp;0.8698,'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†¬†¬†¬†\&quot;verifyMsid\&quot;:&nbsp;0.8698,'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†¬†¬†¬†\&quot;tms_guid\&quot;:&nbsp;1.6971,'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†¬†¬†¬†\&quot;queryErr\&quot;:&nbsp;7.4243,'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†¬†¬†¬†\&quot;StoringRecharge\&quot;:&nbsp;7.4358,'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†¬†¬†¬†\&quot;UpdatingBalance\&quot;:&nbsp;7.448'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†}'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'}'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div><span style="color: #000080; font-weight: bold; ">const</span><span>&nbsp;HIDDENT4INVALID</span><span style="color: #FF0000; ">=</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'{'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&quot;tms_guid&quot;:&nbsp;&quot;9LaHmoHpmTd811R&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&quot;recharge_status&quot;:&nbsp;&quot;100&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&quot;message&quot;:&nbsp;&quot;Transaction&nbsp;Successful&quot;,&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&quot;response_time&quot;:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;&quot;verifyClient&quot;:&nbsp;0.0281,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;&quot;verifyGuid&quot;:&nbsp;0.8695,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†&quot;verifyOperator&quot;:&nbsp;0.8698,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†&quot;verifyMsid&quot;:&nbsp;0.8698,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'¬†&nbsp;¬†&quot;tms_guid&quot;:&nbsp;1.6971,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†&quot;queryErr&quot;:&nbsp;7.4243,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†&quot;StoringRecharge&quot;:&nbsp;7.4358,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'¬†¬†¬†&quot;UpdatingBalance&quot;:&nbsp;7.448&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'¬†&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;</span></div><div><span style="color: #000080; font-weight: bold; ">const</span><span>&nbsp;HIDDENT4VALID</span><span style="color: #FF0000; ">=</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'{'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'&quot;tms_guid&quot;:&nbsp;&quot;9LaHmoHpmTd811R&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'&quot;recharge_status&quot;:&nbsp;&quot;100&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'&quot;message&quot;:&nbsp;&quot;Transaction&nbsp;Successful&quot;,&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'&quot;response_time&quot;:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'	&quot;verifyClient&quot;:&nbsp;0.0281,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'	&quot;verifyGuid&quot;:&nbsp;0.8695,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'	&quot;verifyOperator&quot;:&nbsp;0.86&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'	&quot;verifyMsid&quot;:&nbsp;0.8698,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'	&quot;tms_guid&quot;:&nbsp;1.6971,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'	&quot;queryErr&quot;:&nbsp;7.4243,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'	&quot;StoringRecharge&quot;:&nbsp;7.4358,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'	&quot;UpdatingBalance&quot;:&nbsp;7.448&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>	</span><span style="color: #008080; ">'&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'}'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;<br>&nbsp;</span></div><div><span style="color: #000080; font-weight: bold; ">const</span></div><div><span>&nbsp;ArgInstallUpdate&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #008080; ">'/install_update'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;ArgRegisterExtension&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #008080; ">'/register_global_file_associations'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">var</span><span>&nbsp;TimeServers&nbsp;</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">array</span><span style="color: #FF0000; ">[1..4]</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">of</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;</span></div><div><span style="color: #000080; font-weight: bold; ">procedure</span><span>&nbsp;SetSynchroTime</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">var</span><span>&nbsp;&nbsp;mySTime</span><span style="color: #FF0000; ">:</span><span>&nbsp;TIdSNTP</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;success</span><span style="color: #FF0000; ">:</span><span>&nbsp;Boolean</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;i</span><span style="color: #FF0000; ">:</span><span>&nbsp;Integer</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>mySTime&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;TIdSNTP</span><span style="color: #FF0000; ">.</span><span>Create</span><span style="color: #FF0000; ">(</span><span style="color: #000080; font-weight: bold; ">nil</span><span style="color: #FF0000; ">);</span></div><div><span>success&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;False</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">try</span></div><div><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">for</span><span>&nbsp;i&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;Low</span><span style="color: #FF0000; ">(</span><span>TimeServers</span><span style="color: #FF0000; ">)</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;High</span><span style="color: #FF0000; ">(</span><span>TimeServers</span><span style="color: #FF0000; ">)</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;mySTime</span><span style="color: #FF0000; ">.</span><span>Host&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;TimeServers</span><span style="color: #FF0000; ">[</span><span>i</span><span style="color: #FF0000; ">];</span></div><div><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">try</span></div><div><span>&nbsp;mySTime</span><span style="color: #FF0000; ">.</span><span>host</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">if</span><span>&nbsp;mySTime</span><span style="color: #FF0000; ">.</span><span>DateTime&nbsp;</span><span style="color: #FF0000; ">&gt;</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">then</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;success&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;True</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'Time&nbsp;synchronized&nbsp;successfully&nbsp;with:&nbsp;'</span><span>&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;TimeServers</span><span style="color: #FF0000; ">[</span><span>i</span><span style="color: #FF0000; ">]);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'The&nbsp;internet&nbsp;time:&nbsp;'</span><span>&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;DateTimeToStr</span><span style="color: #FF0000; ">(</span><span>mySTime</span><span style="color: #FF0000; ">.</span><span>DateTime</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Break</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">except</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'Failed&nbsp;to&nbsp;sync&nbsp;with&nbsp;'</span><span>&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;TimeServers</span><span style="color: #FF0000; ">[</span><span>i</span><span style="color: #FF0000; ">]);</span></div><div><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">if</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">not</span><span>&nbsp;success&nbsp;</span><span style="color: #000080; font-weight: bold; ">then</span><span>&nbsp;Writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'All&nbsp;NTP&nbsp;servers&nbsp;failed&nbsp;to&nbsp;synchronize.'</span><span style="color: #FF0000; ">);</span></div><div><span style="color: #000080; font-weight: bold; ">finally</span></div><div><span>&nbsp;mySTime</span><span style="color: #FF0000; ">.</span><span>Free</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;<br></span></div><div><span style="color: #000080; font-weight: bold; ">function</span><span>&nbsp;Test99</span><span style="color: #FF0000; ">(</span><span style="color: #000080; font-weight: bold; ">out</span><span>&nbsp;Msg</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">):</span><span>&nbsp;Boolean</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">var</span></div><div><span>&nbsp;&nbsp;Json</span><span style="color: #FF0000; ">:</span><span>&nbsp;TMcJsonItem</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;i</span><span style="color: #FF0000; ">:</span><span>&nbsp;Integer</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;Msg&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">'Test:&nbsp;Github&nbsp;readme.md&nbsp;content&nbsp;ex.&nbsp;99'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;Json&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;TMcJsonItem</span><span style="color: #FF0000; ">.</span><span>Create</span><span style="color: #FF0000; ">();</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;add&nbsp;some&nbsp;pairs.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #FF0000; ">.</span><span>Add</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'key1'</span><span style="color: #FF0000; ">).</span><span>AsInteger&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">1;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #FF0000; ">.</span><span>Add</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'key2'</span><span style="color: #FF0000; ">).</span><span>AsBoolean&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;True</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #FF0000; ">.</span><span>Add</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'key3'</span><span style="color: #FF0000; ">).</span><span>AsNumber&nbsp;&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #00FF00; ">1.234</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #FF0000; ">.</span><span>Add</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'key4'</span><span style="color: #FF0000; ">).</span><span>AsString&nbsp;&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">'value&nbsp;1'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;add&nbsp;an&nbsp;array</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #FF0000; ">.</span><span>Add1</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'array'</span><span style="color: #FF0000; ">,</span><span>&nbsp;jitArray</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">for</span><span>&nbsp;i&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">1</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;</span><span style="color: #FF0000; ">3</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #FF0000; ">[</span><span style="color: #008080; ">'array'</span><span style="color: #FF0000; ">].</span><span>Add</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">''</span><span style="color: #FF0000; ">).</span><span>AsInteger&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;i</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;save&nbsp;a&nbsp;backup&nbsp;to&nbsp;file</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">if</span><span>&nbsp;</span><span style="color: #FF0000; ">(</span><span>Json</span><span style="color: #FF0000; ">[</span><span style="color: #008080; ">'array'</span><span style="color: #FF0000; ">].</span><span>Count&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #FF0000; ">3)</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">then</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #FF0000; ">.</span><span>SaveToFile</span><span style="color: #FF0000; ">(</span><span>exepath</span><span style="color: #FF0000; ">+</span><span style="color: #008080; ">'examples\test99.json'</span><span style="color: #FF0000; ">,</span><span>&nbsp;true</span><span style="color: #FF0000; ">,</span><span>&nbsp;true</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;remove&nbsp;an&nbsp;item</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #FF0000; ">.</span><span>Delete1</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'array'</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;oops,&nbsp;load&nbsp;the&nbsp;backup</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">if</span><span>&nbsp;</span><span style="color: #FF0000; ">(</span><span>Json</span><span style="color: #FF0000; ">.</span><span>Count&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #FF0000; ">4)</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">then</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #FF0000; ">.</span><span>LoadFromFile</span><span style="color: #FF0000; ">(</span><span>exepath</span><span style="color: #FF0000; ">+</span><span style="color: #008080; ">'examples\test99.json'</span><span style="color: #FF0000; ">,</span><span>&nbsp;true</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;test&nbsp;final&nbsp;result</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">(</span><span>Json</span><span style="color: #FF0000; ">.</span><span>AsJSON&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #008080; ">'{&quot;key1&quot;:1,&quot;key2&quot;:true,&quot;key3&quot;:1.234,&quot;key4&quot;:&quot;value&nbsp;1&quot;,&quot;array&quot;:[1,2,3]}'</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>formatjson</span><span style="color: #FF0000; ">(</span><span>Json</span><span style="color: #FF0000; ">.</span><span>AsJson</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">except</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;False</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">finally</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #FF0000; ">.</span><span>Free</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-style: italic; ">//https://stackoverflow.com/questions/22394748/json-conversion-error-expected-after-key<br>//{{&quot;x&quot;&nbsp;:&nbsp;100,&nbsp;&quot;y&quot;&nbsp;:&nbsp;90},{&quot;x&quot;&nbsp;:&nbsp;100,&nbsp;&quot;y&quot;&nbsp;:&nbsp;85}}<br>//Use&nbsp;[]&nbsp;not&nbsp;{}&nbsp;as&nbsp;the&nbsp;outer&nbsp;brackets,&nbsp;or&nbsp;:[{&nbsp;--&gt;&nbsp;:{{<br></span></div><div><span style="color: #000080; font-weight: bold; ">procedure</span><span>&nbsp;TRestOnResponseEvent2</span><span style="color: #FF0000; ">(</span><span>ARestClient</span><span style="color: #FF0000; ">:</span><span>&nbsp;TRestClient</span><span style="color: #FF0000; ">;</span><span>&nbsp;ResponseCode</span><span style="color: #FF0000; ">:</span><span>&nbsp;Integer</span><span style="color: #FF0000; ">;</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">const</span><span>&nbsp;ResponseContent</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">);</span><span>&nbsp;&nbsp;<br>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'@addr&nbsp;of:'</span><span style="color: #FF0000; ">+</span><span>objtostr</span><span style="color: #FF0000; ">(</span><span>arestclient</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln('response&nbsp;cont:&nbsp;'+responsecontent)</span></div><div><span>&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'response&nbsp;code:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>itoa</span><span style="color: #FF0000; ">(</span><span>responsecode</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'enabled&nbsp;compression&nbsp;'</span><span style="color: #FF0000; ">+</span><span>botostr</span><span style="color: #FF0000; ">(</span><span>arestclient</span><span style="color: #FF0000; ">.</span><span>EnabledCompression</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'content-encoding:'</span><span style="color: #FF0000; ">+</span><span>arestclient</span><span style="color: #FF0000; ">.</span><span>responseheader</span><span style="color: #FF0000; ">[</span><span style="color: #008080; ">'Content-Encoding'</span><span style="color: #FF0000; ">]);</span></div><div><span>&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'verifycert:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>botostr</span><span style="color: #FF0000; ">(</span><span>arestclient</span><span style="color: #FF0000; ">.</span><span>verifycert</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;<br></span></div><div><span style="color: #000080; font-weight: bold; ">function</span><span>&nbsp;GetRestCountriesJSON2</span><span style="color: #FF0000; ">(</span><span style="color: #000080; font-weight: bold; ">const</span><span>&nbsp;URLCountry</span><span style="color: #FF0000; ">,</span><span>&nbsp;Datafeed</span><span style="color: #FF0000; ">,</span><span>&nbsp;APIKEY</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span><span>&nbsp;map</span><span style="color: #FF0000; ">:</span><span>&nbsp;boolean</span><span style="color: #FF0000; ">):</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">var</span><span>&nbsp;encodURL</span><span style="color: #FF0000; ">,</span><span>&nbsp;tmpstr</span><span style="color: #FF0000; ">,</span><span>&nbsp;savstr</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;mapStrm</span><span style="color: #FF0000; ">:</span><span>&nbsp;TStringStream</span><span style="color: #FF0000; ">;</span><span>&nbsp;jo</span><span style="color: #FF0000; ">,</span><span>jo2</span><span style="color: #FF0000; ">:</span><span>&nbsp;TJSONObject</span><span style="color: #FF0000; ">;</span><span>&nbsp;ajar</span><span style="color: #FF0000; ">:</span><span>&nbsp;TJSONArray</span><span style="color: #FF0000; ">;</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//jconv:TJSONConverter&nbsp;;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;job</span><span style="color: #FF0000; ">:</span><span>&nbsp;TJSON</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;N</span><span style="color: #FF0000; ">:</span><span>&nbsp;TMcJsonItem</span><span style="color: #FF0000; ">;</span><span>&nbsp;arest</span><span style="color: #FF0000; ">:</span><span>&nbsp;TRestResource</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;&nbsp;savestr</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//datafeed:=&nbsp;'France';</span></div><div><span>&nbsp;&nbsp;encodURL</span><span style="color: #FF0000; ">:=</span><span>&nbsp;Format</span><span style="color: #FF0000; ">(</span><span>URLCountry</span><span style="color: #FF0000; ">,[</span><span>HTTPEncode</span><span style="color: #FF0000; ">(</span><span>Datafeed</span><span style="color: #FF0000; ">),</span><span>&nbsp;APIKEY</span><span style="color: #FF0000; ">]);</span><span>&nbsp;<br>&nbsp;&nbsp;mapStrm</span><span style="color: #FF0000; ">:=</span><span>&nbsp;TStringStream</span><span style="color: #FF0000; ">.</span><span>create</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">''</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">with</span><span>&nbsp;TRestClient</span><span style="color: #FF0000; ">.</span><span>create</span><span style="color: #FF0000; ">(</span><span>self</span><span style="color: #FF0000; ">)</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arest</span><span style="color: #FF0000; ">:=</span><span>&nbsp;Resource</span><span style="color: #FF0000; ">(</span><span>EncodURL</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//HttpGet(EncodURL,&nbsp;mapStrm);&nbsp;&nbsp;//WinInet</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arest</span><span style="color: #FF0000; ">.</span><span>ContentType</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'application/json;&nbsp;charset=utf-8'</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'content&nbsp;types&nbsp;'</span><span style="color: #FF0000; ">+</span><span>arest</span><span style="color: #FF0000; ">.</span><span>GetContentTypes</span><span style="color: #FF0000; ">);</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//arest.Authorization('Bearer&nbsp;'+CHATGPT_APIKEY2);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConnectionType</span><span style="color: #FF0000; ">:=</span><span>&nbsp;hctWinInet</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OnResponse</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">@</span><span>TRestOnResponseEvent2</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//arest.post(mapStrm)</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;savestr</span><span style="color: #FF0000; ">:=</span><span>&nbsp;aRest</span><span style="color: #FF0000; ">.</span><span>get</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writ(savestr)</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SaveStringToStreamUTF8</span><span style="color: #FF0000; ">(</span><span>savestr</span><span style="color: #FF0000; ">,</span><span>&nbsp;mapstrm</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'cont&nbsp;size:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>itoa</span><span style="color: #FF0000; ">(</span><span>mapstrm</span><span style="color: #FF0000; ">.</span><span>size</span><span style="color: #FF0000; ">));</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;&nbsp;writeln('cont&nbsp;'+(mapstrm.datastring));&nbsp;&nbsp;&nbsp;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapStrm</span><span style="color: #FF0000; ">.</span><span>Position</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'&nbsp;&nbsp;'</span><span style="color: #FF0000; ">);</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;jo:=&nbsp;TJSONObject.Create4(HIDDENT4VALID);&nbsp;&nbsp;&nbsp;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #FF0000; ">(</span><span>formatjson2&nbsp;</span><span style="color: #FF0000; ">(</span><span>savestr</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #FF0000; ">4));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writ(formatjson((mapstrm.datastring)));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;job</span><span style="color: #FF0000; ">:=</span><span>&nbsp;TJSON</span><span style="color: #FF0000; ">.</span><span>Create</span><span style="color: #FF0000; ">();</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;job</span><span style="color: #FF0000; ">.</span><span>parse</span><span style="color: #FF0000; ">(</span><span>savestr</span><span style="color: #FF0000; ">);</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(parsejsonvalue(job.stringify))</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'trans&nbsp;count:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>itoa</span><span style="color: #FF0000; ">(</span><span>job</span><span style="color: #FF0000; ">.</span><span>jsonarray</span><span style="color: #FF0000; ">[0].</span><span>asobject</span><span style="color: #FF0000; ">[</span><span style="color: #008080; ">'translations'</span><span style="color: #FF0000; ">].</span><span>asobject</span><span style="color: #FF0000; ">.</span><span>count</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>job</span><span style="color: #FF0000; ">.</span><span>jsonarray</span><span style="color: #FF0000; ">[0].</span><span>asobject</span><span style="color: #FF0000; ">[</span><span style="color: #008080; ">'translations'</span><span style="color: #FF0000; ">].</span><span>asobject</span><span style="color: #FF0000; ">[</span><span style="color: #008080; ">'ara'</span><span style="color: #FF0000; ">].</span><span>asobject</span><span style="color: #FF0000; ">[</span><span style="color: #008080; ">'official'</span><span style="color: #FF0000; ">].</span><span>asstring</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>job</span><span style="color: #FF0000; ">.</span><span>jsonarray</span><span style="color: #FF0000; ">[0].</span><span>asobject</span><span style="color: #FF0000; ">[</span><span style="color: #008080; ">'translations'</span><span style="color: #FF0000; ">].</span><span>asobject</span><span style="color: #FF0000; ">[</span><span style="color: #008080; ">'ces'</span><span style="color: #FF0000; ">].</span><span>asobject</span><span style="color: #FF0000; ">[</span><span style="color: #008080; ">'common'</span><span style="color: #FF0000; ">].</span><span>asstring</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'enctype:'</span><span style="color: #FF0000; ">+</span><span>itoa</span><span style="color: #FF0000; ">(</span><span>ord</span><span style="color: #FF0000; ">(</span><span>DetectUTF8Encoding</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'√Ö&nbsp;v√É¬Ωcarsk√É&nbsp;'</span><span style="color: #FF0000; ">))));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'enctype:'</span><span style="color: #FF0000; ">+</span><span>itoa</span><span style="color: #FF0000; ">(</span><span>ord</span><span style="color: #FF0000; ">(</span><span>DetectUTF8Encoding</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'„Çπ„Ç§„ÇπÈÄ£ÈÇ¶'</span><span style="color: #FF0000; ">))));</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">(*&nbsp;&nbsp;N&nbsp;:=&nbsp;TMcJsonItem.Create;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;N.AsJSON&nbsp;:=&nbsp;savestr;&nbsp;//'{&quot;i&quot;:&nbsp;123,&nbsp;&quot;f&quot;:&nbsp;123.456,&nbsp;&quot;s&quot;:&nbsp;&quot;abc&quot;,&nbsp;&quot;b&quot;:&nbsp;true,&nbsp;&quot;n&quot;:&nbsp;null}';<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ('parse&nbsp;and&nbsp;check&nbsp;JSON:&nbsp;'+botostr(&nbsp;N.Check(savestr,&nbsp;false)));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//writ(botostr(N.CheckException(&nbsp;'{&quot;k&quot;:1,&nbsp;&quot;k&quot;:2}',&nbsp;false&nbsp;)));&nbsp;//&nbsp;Answer&nbsp;will&nbsp;be&nbsp;false<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ(botostr(N.CheckException(savestr,&nbsp;false&nbsp;)));&nbsp;//&nbsp;Answer&nbsp;will&nbsp;be&nbsp;false<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln(ExceptionToString(ExceptionType,&nbsp;ExceptionParam));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ('parse&nbsp;&amp;&nbsp;check&nbsp;JSON:&nbsp;'+botostr(N.Check(utf8decode(loadfile(Exepath+'\restcountrieskeysutf812.txt')),false)));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//writ(formatjson2&nbsp;(utf8decode(loadfile(Exepath+'\restcountrieskeysutf812.txt')),&nbsp;4));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;N.Free;&nbsp;&nbsp;&nbsp;&nbsp;*)</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//E:&nbsp;Exception:&nbsp;&lt;TJsonValue&gt;&quot;translations&quot;&nbsp;value&nbsp;type&nbsp;error:&nbsp;jvObject&nbsp;to&nbsp;jvString</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//E:&nbsp;Exception:&nbsp;&lt;TJson&gt;json&nbsp;struct&nbsp;type&nbsp;is&nbsp;not&nbsp;jsObject</span></div><div><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;job</span><span style="color: #FF0000; ">.</span><span>free</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//imoortant&nbsp;hack:&nbsp;we&nbsp;have&nbsp;to&nbsp;replace&nbsp;json&nbsp;node&nbsp;from&nbsp;[{&nbsp;to&nbsp;{&nbsp;!&nbsp;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//tmpstr:=&nbsp;StringReplace(mapStrm.datastring,&nbsp;'[{&quot;name','{&quot;name',[rfReplaceAll,&nbsp;rfIgnoreCase]);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;tmpstr</span><span style="color: #FF0000; ">:=</span><span>&nbsp;StringReplace</span><span style="color: #FF0000; ">(</span><span>savestr</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #008080; ">'[{&quot;name'</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'{&quot;name'</span><span style="color: #FF0000; ">,[</span><span>rfReplaceAll</span><span style="color: #FF0000; ">,</span><span>&nbsp;rfIgnoreCase</span><span style="color: #FF0000; ">]);</span></div><div><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;writeln('tempstr:&nbsp;'+CharsetConversion(JSONUnescape((tmpstr),&nbsp;#13#10),&nbsp;UTF_8,&nbsp;ISO_8859_1));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;writeln('tempstr:&nbsp;'+CharsetConversion(ParseJSOnValue((mapStrm.datastring)),&nbsp;UTF_8,&nbsp;ISO_8859_1));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jo</span><span style="color: #FF0000; ">:=</span><span>&nbsp;TJSONObject</span><span style="color: #FF0000; ">.</span><span>Create4</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">''</span><span style="color: #FF0000; ">+(</span><span>tmpstr</span><span style="color: #FF0000; ">)+</span><span style="color: #008080; ">'}'</span><span style="color: #FF0000; ">);</span><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jo2</span><span style="color: #FF0000; ">:=</span><span>&nbsp;jo</span><span style="color: #FF0000; ">.</span><span>getjsonobject</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'translations'</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'languages:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>itoa</span><span style="color: #FF0000; ">(</span><span>jo2</span><span style="color: #FF0000; ">.</span><span>length</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">for</span><span>&nbsp;it</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;jo2</span><span style="color: #FF0000; ">.</span><span>length</span><span style="color: #FF0000; ">-1</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>jo2</span><span style="color: #FF0000; ">.</span><span>keys</span><span style="color: #FF0000; ">[</span><span>it</span><span style="color: #FF0000; ">]+</span><span style="color: #008080; ">','</span><span style="color: #FF0000; ">+</span><span>JSONUnescape</span><span style="color: #FF0000; ">(</span><span>jo2</span><span style="color: #FF0000; ">.</span><span>getstring</span><span style="color: #FF0000; ">(</span><span>jo2</span><span style="color: #FF0000; ">.</span><span>keys</span><span style="color: #FF0000; ">[</span><span>it</span><span style="color: #FF0000; ">]),</span><span style="color: #0066CC; text-decoration: underline; ">#13#10</span><span style="color: #FF0000; ">));</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{writeln(jo2.keys[it]+','+CharsetConversion(JSONUnescape(jo2.getstring(jo2.keys[it]),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#13#10),UTF_8,&nbsp;CP1250));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jo2</span><span style="color: #FF0000; ">:=</span><span>&nbsp;jo</span><span style="color: #FF0000; ">.</span><span>getjsonobject</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'languages'</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'official&nbsp;langs&nbsp;len:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>itoa</span><span style="color: #FF0000; ">(</span><span>jo2</span><span style="color: #FF0000; ">.</span><span>length</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//ajar:=&nbsp;jo.names;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">for</span><span>&nbsp;it</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;jo2</span><span style="color: #FF0000; ">.</span><span>length</span><span style="color: #FF0000; ">-1</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>JSONUnescape</span><span style="color: #FF0000; ">(</span><span>jo2</span><span style="color: #FF0000; ">.</span><span>getstring</span><span style="color: #FF0000; ">(</span><span>jo2</span><span style="color: #FF0000; ">.</span><span>keys</span><span style="color: #FF0000; ">[</span><span>it</span><span style="color: #FF0000; ">]),</span><span style="color: #0066CC; text-decoration: underline; ">#13#10</span><span style="color: #FF0000; ">));<br></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{&nbsp;&nbsp;for&nbsp;it:=&nbsp;0&nbsp;to&nbsp;jo2.length-1&nbsp;do&nbsp;begin<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//writeln(JSONUnescape(jo2.getstring(jo2.keys[it]),&nbsp;#13#10));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//writeln(CharsetConversion(parsejsonvalue(jo2.getstring(jo2.keys[it])),UTF_8,ISO_8859_1));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//savstr:=&nbsp;savstr&nbsp;+&nbsp;jo2.getstring(jo2.keys[it]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;&nbsp;&nbsp;}</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;savestring3(exepath+'restcountrieskeysutf812.txt',&nbsp;JSONUnescape(savestr,#13#10&nbsp;),&nbsp;false);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;openfile(exepath+'restcountrieskeysutf812.txt');<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'&nbsp;&nbsp;'</span><span style="color: #FF0000; ">);</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//https://onlinetools.com/unicode/check-spoofed-unicode-text&nbsp;&nbsp;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep</span><span style="color: #FF0000; ">(500);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;openfile(exepath+'restcountrieskeysutf8.txt');&nbsp;&nbsp;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'population:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>jo</span><span style="color: #FF0000; ">.</span><span>getstring</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'population'</span><span style="color: #FF0000; ">));</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'area:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>jo</span><span style="color: #FF0000; ">.</span><span>getstring</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'area'</span><span style="color: #FF0000; ">));</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'gini&nbsp;index:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>jo</span><span style="color: #FF0000; ">.</span><span>getstring</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'gini'</span><span style="color: #FF0000; ">));</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ajar</span><span style="color: #FF0000; ">:=</span><span>&nbsp;jo</span><span style="color: #FF0000; ">.</span><span>getjsonarray</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'borders'</span><span style="color: #FF0000; ">);</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'len&nbsp;names&nbsp;borders:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>itoa</span><span style="color: #FF0000; ">(</span><span>ajar</span><span style="color: #FF0000; ">.</span><span>length</span><span style="color: #FF0000; ">))</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">for</span><span>&nbsp;it</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;ajar</span><span style="color: #FF0000; ">.</span><span>length</span><span style="color: #FF0000; ">-1</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>ajar</span><span style="color: #FF0000; ">.</span><span>getstring</span><span style="color: #FF0000; ">(</span><span>it</span><span style="color: #FF0000; ">));</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jo2</span><span style="color: #FF0000; ">:=</span><span>&nbsp;jo</span><span style="color: #FF0000; ">.</span><span>getjsonobject</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'languages'</span><span style="color: #FF0000; ">);</span><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'len&nbsp;names&nbsp;languages:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>itoa</span><span style="color: #FF0000; ">(</span><span>jo2</span><span style="color: #FF0000; ">.</span><span>length</span><span style="color: #FF0000; ">))</span><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">for</span><span>&nbsp;it</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;jo2</span><span style="color: #FF0000; ">.</span><span>length</span><span style="color: #FF0000; ">-1</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>jo2</span><span style="color: #FF0000; ">.</span><span>getstring</span><span style="color: #FF0000; ">(</span><span>jo2</span><span style="color: #FF0000; ">.</span><span>keys</span><span style="color: #FF0000; ">[</span><span>it</span><span style="color: #FF0000; ">]));</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>jo</span><span style="color: #FF0000; ">.</span><span>getjsonobject</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'flags'</span><span style="color: #FF0000; ">).</span><span>getstring</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'png'</span><span style="color: #FF0000; ">))</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">if</span><span>&nbsp;map&nbsp;</span><span style="color: #000080; font-weight: bold; ">then</span><span>&nbsp;openweb</span><span style="color: #FF0000; ">(</span><span>jo</span><span style="color: #FF0000; ">.</span><span>getjsonobject</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'maps'</span><span style="color: #FF0000; ">).</span><span>getstring</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'openStreetMaps'</span><span style="color: #FF0000; ">));</span><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">except</span><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln('Error:&nbsp;'+mapstrm.datastring);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'E:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>ExceptiontoString</span><span style="color: #FF0000; ">(</span><span>exceptiontype</span><span style="color: #FF0000; ">,</span><span>&nbsp;exceptionparam</span><span style="color: #FF0000; ">));</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">finally</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;mapStrm</span><span style="color: #FF0000; ">.</span><span>Free</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;encodURL</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">''</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;jo</span><span style="color: #FF0000; ">.</span><span>Free</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//ajar.Free;&nbsp;//jo2.Free;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-weight: bold; ">function</span><span>&nbsp;RemoveChars2</span><span style="color: #FF0000; ">(</span><span>sourceString</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span><span>&nbsp;sCharsToBeRemoved</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">):</span><span>string</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">var</span><span>&nbsp;I</span><span style="color: #FF0000; ">:</span><span>&nbsp;Integer</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//Prepare&nbsp;enpty&nbsp;string&nbsp;for&nbsp;our&nbsp;result&nbsp;str&nbsp;to&nbsp;which&nbsp;we&nbsp;will&nbsp;be&nbsp;copying&nbsp;our&nbsp;end&nbsp;characters</span></div><div><span>&nbsp;&nbsp;result&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">''</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//Loop&nbsp;through&nbsp;the&nbsp;whole&nbsp;string</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">for</span><span>&nbsp;I&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">1</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;Length</span><span style="color: #FF0000; ">(</span><span>sourceString</span><span style="color: #FF0000; ">)</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//If&nbsp;specific&nbsp;haracter&nbsp;can't&nbsp;be&nbsp;found&nbsp;in&nbsp;sCharsToBeRemoved&nbsp;copy&nbsp;that&nbsp;character&nbsp;to&nbsp;the&nbsp;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//result&nbsp;string</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">if</span><span>&nbsp;Pos</span><span style="color: #FF0000; ">(</span><span>sourceString</span><span style="color: #FF0000; ">[</span><span>I</span><span style="color: #FF0000; ">],</span><span>&nbsp;sCharsToBeRemoved</span><span style="color: #FF0000; ">)</span><span>&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">then</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;result&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;sourceString</span><span style="color: #FF0000; ">[</span><span>I</span><span style="color: #FF0000; ">];</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-weight: bold; ">type</span></div><div><span>&nbsp;&nbsp;TReplacePair&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">record</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;TextValue</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;ReplaceValue</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;TReplacePairs&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">array</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">of</span><span>&nbsp;TReplacePair</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-weight: bold; ">function</span><span>&nbsp;GetReplacementPairs</span><span style="color: #FF0000; ">:</span><span>&nbsp;TReplacePairs</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">var</span></div><div><span>&nbsp;&nbsp;ConfigInfo</span><span style="color: #FF0000; ">:</span><span>&nbsp;TStringList</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;i</span><span style="color: #FF0000; ">,</span><span>&nbsp;Split</span><span style="color: #FF0000; ">:</span><span>&nbsp;Integer</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;ConfigInfo&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;TStringList</span><span style="color: #FF0000; ">.</span><span>Create</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;ConfigInfo</span><span style="color: #FF0000; ">.</span><span>LoadFromFile</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'ReplacementPairs.txt'</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;SetLength</span><span style="color: #FF0000; ">(</span><span>Result</span><span style="color: #FF0000; ">,</span><span>&nbsp;ConfigInfo</span><span style="color: #FF0000; ">.</span><span>Count</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">for</span><span>&nbsp;i&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;ConfigInfo</span><span style="color: #FF0000; ">.</span><span>Count&nbsp;</span><span style="color: #FF0000; ">-</span><span>&nbsp;</span><span style="color: #FF0000; ">1</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Split&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;Pos</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'|'</span><span style="color: #FF0000; ">,</span><span>&nbsp;ConfigInfo</span><span style="color: #FF0000; ">[</span><span>i</span><span style="color: #FF0000; ">]);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result</span><span style="color: #FF0000; ">[</span><span>i</span><span style="color: #FF0000; ">].</span><span>TextValue&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;Copy</span><span style="color: #FF0000; ">(</span><span>ConfigInfo</span><span style="color: #FF0000; ">[</span><span>i</span><span style="color: #FF0000; ">],</span><span>&nbsp;</span><span style="color: #FF0000; ">1,</span><span>&nbsp;Split&nbsp;</span><span style="color: #FF0000; ">-</span><span>&nbsp;</span><span style="color: #FF0000; ">1);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result</span><span style="color: #FF0000; ">[</span><span>i</span><span style="color: #FF0000; ">].</span><span>ReplaceValue&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;Copy</span><span style="color: #FF0000; ">(</span><span>ConfigInfo</span><span style="color: #FF0000; ">[</span><span>i</span><span style="color: #FF0000; ">],</span><span>&nbsp;Split&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #FF0000; ">1,</span><span>&nbsp;MaxInt</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">finally</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;ConfigInfo</span><span style="color: #FF0000; ">.</span><span>Free</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;<br><br></span></div><div><span style="color: #000080; font-weight: bold; ">const</span><span>&nbsp;DEF_JSONDECODE&nbsp;</span><span style="color: #FF0000; ">=</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'def&nbsp;decode_and_print_json(data):&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;#&nbsp;Laden&nbsp;der&nbsp;JSON-Daten&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;decoded_data&nbsp;=&nbsp;json.loads(data)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;#&nbsp;Iterieren&nbsp;durch&nbsp;und&nbsp;Dekodierung&nbsp;der&nbsp;UTF-8&nbsp;Zeichen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;for&nbsp;entry&nbsp;in&nbsp;decoded_data:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;key,&nbsp;value&nbsp;in&nbsp;entry.items():&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entry[key]&nbsp;=&nbsp;value.encode(&quot;latin1&quot;).decode(&quot;utf-8&quot;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;#&nbsp;Darstellung&nbsp;der&nbsp;dekodierten&nbsp;Daten&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;pretty_json=&nbsp;json.dumps(decoded_data,ensure_ascii=False,indent=4)'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;pretty_json&nbsp;&nbsp;#print(pretty_json)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-weight: bold; ">const</span><span>&nbsp;DEF_JSONDECODE2&nbsp;</span><span style="color: #FF0000; ">=</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'def&nbsp;improve_json_output(json_data):&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;#&nbsp;Decodiere&nbsp;und&nbsp;formatiere&nbsp;die&nbsp;JSON-Daten&nbsp;mit&nbsp;UTF-8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;improved_json=&nbsp;json.dumps(json_data,&nbsp;indent=2,&nbsp;ensure_ascii=False)&nbsp;'</span><span style="color: #FF0000; ">+</span><span>LF</span><span style="color: #FF0000; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;return&nbsp;improved_json&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-weight: bold; ">procedure</span><span>&nbsp;PyCodeJSON</span><span style="color: #FF0000; ">(</span><span>imgpath</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">);</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">with</span><span>&nbsp;TPythonEngine</span><span style="color: #FF0000; ">.</span><span>Create</span><span style="color: #FF0000; ">(</span><span style="color: #000080; font-weight: bold; ">Nil</span><span style="color: #FF0000; ">)</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//pythonhome:=&nbsp;'C:\Users\max\AppData\Local\Programs\Python\Python36-32\';</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;loadDLL</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;ExecString</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'from&nbsp;math&nbsp;import&nbsp;factorial'</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;execstr</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'import&nbsp;json'</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;execstr</span><span style="color: #FF0000; ">(</span><span>DEF_JSONDECODE2</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Println</span><span style="color: #FF0000; ">(</span><span>EvalStr</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'[n&nbsp;for&nbsp;n&nbsp;in&nbsp;range(5*24)&nbsp;if&nbsp;str(factorial(n)).count(&quot;0&quot;)==23]'</span><span style="color: #FF0000; ">));</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;Println(EvalStr('decode_and_print_json('+JSONDATA+')'));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Println</span><span style="color: #FF0000; ">(</span><span>EvalStr</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'improve_json_output('</span><span style="color: #FF0000; ">+</span><span>JSONDATA</span><span style="color: #FF0000; ">+</span><span style="color: #008080; ">')'</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">except</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;raiseError</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">finally</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;unloadDLL</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;free</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span><span>&nbsp;<br>&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span><span>&nbsp;<br><br></span></div><div><span style="color: #000080; font-style: italic; ">{var&nbsp;ESCAPES:&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;of&nbsp;Char;&nbsp;//&nbsp;=&nbsp;['b',&nbsp;'t',&nbsp;'n',&nbsp;'f',&nbsp;'r',&nbsp;'&quot;',&nbsp;'/',&nbsp;'\',&nbsp;'u'&nbsp;];<br>&nbsp;&nbsp;&nbsp;&nbsp;HEXA:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcharset;//&nbsp;=&nbsp;['0'..'9',&nbsp;'A'..'F',&nbsp;'a'..'f'];<br>function&nbsp;escapeChar_(const&nbsp;aStr:&nbsp;string;&nbsp;aPos,&nbsp;aLen:&nbsp;Integer;&nbsp;out&nbsp;aUnk:&nbsp;Boolean):&nbsp;Integer;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div><span style="color: #000080; font-weight: bold; ">type</span></div><div><span>&nbsp;&nbsp;TTTest&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">function</span><span style="color: #FF0000; ">(</span><span style="color: #000080; font-weight: bold; ">out</span><span>&nbsp;Msg</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">):</span><span>&nbsp;Boolean</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-weight: bold; ">procedure</span><span>&nbsp;JCheck</span><span style="color: #FF0000; ">(</span><span>Test</span><span style="color: #FF0000; ">:</span><span>&nbsp;TTTest</span><span style="color: #FF0000; ">;</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">var</span><span>&nbsp;Passed</span><span style="color: #FF0000; ">,</span><span>&nbsp;Failed</span><span style="color: #FF0000; ">:</span><span>&nbsp;Integer</span><span style="color: #FF0000; ">);</span></div><div><span style="color: #000080; font-weight: bold; ">var</span><span>&nbsp;&nbsp;S</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">if</span><span>&nbsp;Test</span><span style="color: #FF0000; ">(</span><span>S</span><span style="color: #FF0000; ">)</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">then</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Inc</span><span style="color: #FF0000; ">(</span><span>Passed</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;WriteLn</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'[PASS]&nbsp;'</span><span style="color: #FF0000; ">+</span><span>&nbsp;S</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">else</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Inc</span><span style="color: #FF0000; ">(</span><span>Failed</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;WriteLn</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'[FAIL]&nbsp;'</span><span style="color: #FF0000; ">+</span><span>&nbsp;S</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;<br><br></span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//var&nbsp;&nbsp;&nbsp;IDoc:&nbsp;IHTMLDocument2;</span></div><div><span style="color: #000080; font-weight: bold; ">var</span><span>&nbsp;regEx</span><span style="color: #FF0000; ">:</span><span>&nbsp;TRegEx</span><span style="color: #FF0000; ">;</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//TPerlRegex&nbsp;or&nbsp;OleVariant&nbsp;if&nbsp;HISUtils;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;DaysDiff</span><span style="color: #FF0000; ">:</span><span>&nbsp;Double</span><span style="color: #FF0000; ">;</span><span>&nbsp;TotalPassed</span><span style="color: #FF0000; ">,</span><span>&nbsp;TotalFailed</span><span style="color: #FF0000; ">:</span><span>&nbsp;Integer</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//aJsonDoc&nbsp;:&nbsp;TalJsonDocumentU;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;envlist</span><span style="color: #FF0000; ">:</span><span>&nbsp;Tstringlist</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;instr</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span><span>&nbsp;cnt</span><span style="color: #FF0000; ">:</span><span>&nbsp;integer</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;<br></span></div><div><span style="color: #000080; font-weight: bold; ">begin</span><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//@main</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//maxform1.ShellStyle1click(self)</span></div><div><span>&nbsp;&nbsp;maxform1</span><span style="color: #FF0000; ">.</span><span>Console1Click</span><span style="color: #FF0000; ">(</span><span>self</span><span style="color: #FF0000; ">)</span></div><div><span>&nbsp;&nbsp;memo2</span><span style="color: #FF0000; ">.</span><span>font</span><span style="color: #FF0000; ">.</span><span>size</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">12;</span></div><div><span>&nbsp;&nbsp;writ</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'DebugHeapStatus:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>DebugHeapStatus</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'Weatherjs&nbsp;capital&nbsp;Bern:&nbsp;'</span><span style="color: #FF0000; ">+</span><span>GetWeatherStreamJSON</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'Bern,&nbsp;CH'</span><span style="color: #FF0000; ">,</span><span>WeatherAPIKEY</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;DaysDiff&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;now&nbsp;</span><span style="color: #FF0000; ">-</span><span>&nbsp;strtodate</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'20/06/1959'</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>FloatToStr</span><span style="color: #FF0000; ">(</span><span>DaysDiff</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>FloatToStr</span><span style="color: #FF0000; ">(</span><span>trunc</span><span style="color: #FF0000; ">(</span><span>DaysDiff</span><span style="color: #FF0000; ">)));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;DaysDiff&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;DaySpan</span><span style="color: #FF0000; ">(</span><span>now</span><span style="color: #FF0000; ">,</span><span>&nbsp;strtodate</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'20/06/1959'</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>FloatToStr</span><span style="color: #FF0000; ">(</span><span>trunc</span><span style="color: #FF0000; ">(</span><span>DaysDiff</span><span style="color: #FF0000; ">)));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>FloatToStr</span><span style="color: #FF0000; ">((</span><span>DaysDiff</span><span style="color: #FF0000; ">)));</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//https://www.wolframalpha.com/input?i=difference+now+-+20.06.1959</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//test&nbsp;with&nbsp;https://restcountries.com/v3.1/name/switzerland</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;GetRestCountriesJSON2(RESTCountriesC,'bern','');&nbsp;&nbsp;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;GetRestCountriesJSON2</span><span style="color: #FF0000; ">(</span><span>RESTCountries</span><span style="color: #FF0000; ">,</span><span style="color: #008080; ">'Switzerland'</span><span style="color: #FF0000; ">,</span><span style="color: #008080; ">''</span><span style="color: #FF0000; ">,</span><span>&nbsp;false</span><span style="color: #FF0000; ">);</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;PyCodeJSON</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">''</span><span style="color: #FF0000; ">);</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;function&nbsp;Test99(out&nbsp;Msg:&nbsp;string):&nbsp;Boolean;</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writ(botostr(Test99('out&nbsp;Msg:&nbsp;string')));</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//https://github.com/maxkleiner/McJSON/tree/main/test&nbsp;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;JCheck</span><span style="color: #FF0000; ">(@</span><span>Test99</span><span style="color: #FF0000; ">,</span><span>&nbsp;TotalPassed</span><span style="color: #FF0000; ">,</span><span>&nbsp;TotalFailed</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;writ('jsonform&nbsp;'+formatjson2&nbsp;(JSONDATA2,&nbsp;4));</span></div><div><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;TimeServers</span><span style="color: #FF0000; ">[1]</span><span>&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">'0.debian.pool.ntp.org'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;TimeServers</span><span style="color: #FF0000; ">[2]</span><span>&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">'1.debian.pool.ntp.org'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;TimeServers</span><span style="color: #FF0000; ">[3]</span><span>&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">'2.debian.pool.ntp.org'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;TimeServers</span><span style="color: #FF0000; ">[4]</span><span>&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">'3.debian.pool.ntp.org'</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//SetSynchroTime;</span></div><div><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(itoa(JExecute('cmd&nbsp;/C&nbsp;dir&nbsp;*.*',@TTextHandlerQ,&nbsp;true,&nbsp;false)));&nbsp;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(itoa(JExecute('cmd&nbsp;/c&nbsp;wmic&nbsp;cpu&nbsp;get&nbsp;name',@TTextHandlerQ,&nbsp;true,&nbsp;false)));&nbsp;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(GETDOSOutput('cmd.exe&nbsp;/c&nbsp;wmic&nbsp;cpu&nbsp;get&nbsp;architecture','C:\'));</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(itoa(JExecute('cmd&nbsp;/c&nbsp;netstat&nbsp;-o',@TTextHandlerQ,&nbsp;true,&nbsp;false)));&nbsp;</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(GETDOSOutput('powershell&nbsp;wget&nbsp;&quot;http://www.softwareschule.ch/examples/1080_trend.pas&quot;','C:\'));</span></div><div><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;</span><span style="color: #000080; font-style: italic; ">(*&nbsp;&nbsp;envlist:=&nbsp;Tstringlist.create;<br>&nbsp;&nbsp;&nbsp;InStr:=&nbsp;loadfile(Exepath+'\restcountrieskeysutf812.txt');<br>&nbsp;&nbsp;&nbsp;//writ(formatJSON(utf8decode(instr)));<br>&nbsp;&nbsp;&nbsp;//getJsonData2(utf8decode(instr),'translations','common');<br>&nbsp;&nbsp;&nbsp;//writ(utf8decode(instr));<br>&nbsp;&nbsp;&nbsp;//jSplit(&nbsp;const&nbsp;Delimiter&nbsp;:&nbsp;char;&nbsp;Input&nbsp;:Str;&nbsp;Strings&nbsp;:&nbsp;TStrings);<br>&nbsp;&nbsp;&nbsp;jSplit(&nbsp;'}',&nbsp;utf8decode(instr),&nbsp;envlist);<br>&nbsp;&nbsp;&nbsp;//StrtoList(InStr,&nbsp;envlist,&nbsp;CRLF)<br>&nbsp;&nbsp;&nbsp;writeln('envlist&nbsp;count:&nbsp;'+itoa(envlist.count));<br>&nbsp;&nbsp;&nbsp;cnt:=&nbsp;0;<br>&nbsp;&nbsp;&nbsp;regEx:=&nbsp;TRegEx.create('common&quot;:&quot;[\w]',&nbsp;[rroNotEmpty]);&nbsp;//HISUtils.RegExpr;<br>&nbsp;&nbsp;&nbsp;//regEx.regex:='common&nbsp;[\w+:\w:\w&nbsp;:,]+&nbsp;Sui';<br>&nbsp;&nbsp;&nbsp;//&nbsp;Execute&nbsp;search<br>&nbsp;&nbsp;&nbsp;for&nbsp;it:=&nbsp;0&nbsp;to&nbsp;envlist.count-1&nbsp;do&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;regEx.match(envlist[it]).success&nbsp;then&nbsp;begin<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln(itoa(cnt)+':'+envlist[it]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inc(cnt)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;regex.Free;<br>&nbsp;&nbsp;&nbsp;envlist.Free;&nbsp;&nbsp;&nbsp;&nbsp;//*)</span></div><div><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//EMcJsonException');</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//TMcJsonItemEnumerator');</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//SIRegister_TMcJsonItem(CL);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//SIRegister_TMcJsonItemEnumerator(CL);&nbsp;&nbsp;//jetNone&nbsp;)');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//McJsonEscapeString(&nbsp;const&nbsp;aStr&nbsp;:&nbsp;string;&nbsp;aEsc&nbsp;:&nbsp;TJEscapeType)&nbsp;:&nbsp;string');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//McJsonUnEscapeString(&nbsp;const&nbsp;aStr&nbsp;:&nbsp;string)&nbsp;:&nbsp;string');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//GetItemTypeStr(&nbsp;aType&nbsp;:&nbsp;TJItemType)&nbsp;:&nbsp;string');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//GetValueTypeStr(&nbsp;aType&nbsp;:&nbsp;TJValueType)&nbsp;:&nbsp;string');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//escapeChar(const&nbsp;aStr:&nbsp;string;&nbsp;aPos,&nbsp;aLen:&nbsp;Integer;&nbsp;out&nbsp;aUnk:&nbsp;Boolean):&nbsp;Integer;');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//findUtf8BOM(const&nbsp;Stream:&nbsp;TStream):&nbsp;Int64;');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(itoa(wdc_GetRemoteFileSize(</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div><span style="color: #000080; font-weight: bold; ">End</span><span style="color: #FF0000; ">.<br></span></div><div><span>Doc</span><span style="color: #FF0000; ">:</span><span>&nbsp;https</span><span style="color: #FF0000; ">:</span><span style="color: #000080; font-style: italic; ">//gitlab.com/amatos/rest-countries/-/blob/master/README.md</span></div><div><span>https</span><span style="color: #FF0000; ">:</span><span style="color: #000080; font-style: italic; ">//github.com/maxkleiner/restcountries<br><br>{&quot;official&quot;:&quot;ÿßŸÑÿßÿ™ÿ≠ÿßÿØ&nbsp;ÿßŸÑÿ≥ŸàŸäÿ≥ÿ±Ÿä&quot;,&quot;common&quot;:&quot;ÿ≥ŸàŸäÿ≥ÿ±ÿß&quot;}<br></span></div><div><span>Ein&nbsp;Telemeter&nbsp;</span><span style="color: #FF0000; ">(</span><span>von&nbsp;altgriechisch</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">œÑ·øÜŒªŒµ</span><span>&nbsp;t</span><span style="color: #FF0000; ">ƒì</span><span>le&nbsp;</span><span style="color: #FF0000; ">‚Äû</span><span>fern</span><span style="color: #FF0000; ">‚Äú</span><span>&nbsp;und&nbsp;</span><span style="color: #FF0000; ">ŒºŒ≠œÑœÅŒøŒΩ</span><span>&nbsp;m</span><span style="color: #FF0000; ">√©</span><span>tron&nbsp;</span><span style="color: #FF0000; ">‚Äû</span><span>Ma</span><span style="color: #FF0000; ">√ü,</span><span>&nbsp;Ma</span><span style="color: #FF0000; ">√ü</span><span>stab</span><span style="color: #FF0000; ">‚Äú)</span><span>&nbsp;ist&nbsp;die&nbsp;Funktion&nbsp;eines&nbsp;Chronographen</span><span style="color: #FF0000; ">,</span><span>&nbsp;<br>Entfernungen&nbsp;zu&nbsp;Ereignissen&nbsp;zu&nbsp;messen</span><span style="color: #FF0000; ">,</span><span>&nbsp;die&nbsp;sowohl&nbsp;Licht&nbsp;als&nbsp;auch&nbsp;Schall&nbsp;von&nbsp;sich&nbsp;geben</span><span style="color: #FF0000; ">.<br></span></div><div><span>This&nbsp;API&nbsp;works&nbsp;the&nbsp;following&nbsp;way</span><span style="color: #FF0000; ">:</span><span>&nbsp;it&nbsp;offers&nbsp;the&nbsp;service&nbsp;</span><span style="color: #000080; font-weight: bold; ">of</span><span>&nbsp;geocoding</span><span style="color: #FF0000; ">,</span><span>&nbsp;cartography</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">and</span><span>&nbsp;many&nbsp;other&nbsp;possibilities</span><span style="color: #FF0000; ">.</span><span>&nbsp;</span></div><div><span style="color: #000080; font-weight: bold; ">In</span><span>&nbsp;our&nbsp;example</span><span style="color: #FF0000; ">,</span><span>&nbsp;we&nbsp;will&nbsp;use&nbsp;direct&nbsp;geocoding</span><span style="color: #FF0000; ">.</span><span>&nbsp;We&nbsp;will&nbsp;send&nbsp;the&nbsp;address&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;receive&nbsp;latitude</span><span style="color: #FF0000; ">,</span><span>&nbsp;longitude</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span></div><div><span style="color: #000080; font-weight: bold; ">and</span><span>&nbsp;the&nbsp;information&nbsp;we&nbsp;get&nbsp;via&nbsp;the&nbsp;REST&nbsp;Debugger</span><span style="color: #FF0000; ">.</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">To</span><span>&nbsp;get&nbsp;the&nbsp;response&nbsp;we&nbsp;should&nbsp;configure&nbsp;the&nbsp;JSON&nbsp;root&nbsp;using&nbsp;the&nbsp;data&nbsp;element</span><span style="color: #FF0000; ">:</span></div><div><span>&nbsp;<br>It&nbsp;looks&nbsp;like&nbsp;they&nbsp;never&nbsp;renewed&nbsp;their&nbsp;SSL&nbsp;certificate</span><span style="color: #FF0000; ">.</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">In</span><span>&nbsp;the&nbsp;meantime</span><span style="color: #FF0000; ">,</span><span>&nbsp;<br>you&nbsp;can&nbsp;use&nbsp;https</span><span style="color: #FF0000; ">:</span><span style="color: #000080; font-style: italic; ">//restcountries.com/&nbsp;is&nbsp;a&nbsp;cloned&nbsp;repo&nbsp;that&nbsp;I&nbsp;update&nbsp;frecuently<br></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;we&nbsp;download&nbsp;a&nbsp;script</span><span style="color: #FF0000; ">-</span><span style="color: #000080; font-weight: bold; ">file</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">in</span><span>&nbsp;powershell&nbsp;</span><span style="color: #000080; font-weight: bold; ">with</span><span>&nbsp;wget&nbsp;Invoke</span><span style="color: #FF0000; ">-</span><span>WebRequest&nbsp;open&nbsp;the&nbsp;</span><span style="color: #000080; font-weight: bold; ">file</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;check<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;content</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">then</span><span>&nbsp;execute&nbsp;the&nbsp;script&nbsp;</span><span style="color: #000080; font-weight: bold; ">and</span><span>&nbsp;get&nbsp;the&nbsp;result&nbsp;back&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;maXbox</span><span style="color: #FF0000; ">-</span><span>console&nbsp;</span><span style="color: #000080; font-weight: bold; ">as</span><span>&nbsp;memo2</span><span style="color: #FF0000; ">.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hint</span><span style="color: #FF0000; ">:</span><span>&nbsp;needs&nbsp;a&nbsp;</span><span style="color: #FF0000; ">\</span><span>examples&nbsp;dir&nbsp;otherwise&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;REPL&nbsp;</span><span style="color: #FF0000; ">:</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https</span><span style="color: #FF0000; ">:</span><span style="color: #000080; font-style: italic; ">//meet.google.com/pxu-nehx-qzp</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gryzzly&nbsp;</span><span style="color: #FF0000; ">-</span><span>&nbsp;gr</span><span style="color: #FF0000; ">√§</span><span>ulich</span><span style="color: #FF0000; ">,</span><span>&nbsp;grisly&nbsp;</span><span style="color: #FF0000; ">-</span><span>&nbsp;grausig&nbsp;&nbsp;</span><span style="color: #FF0000; ">(</span><span>ghastly&nbsp;awful</span><span style="color: #FF0000; ">)</span><span>&nbsp;</span><span style="color: #FF0000; ">-</span><span>&nbsp;gr</span><span style="color: #FF0000; ">√§</span><span>sslich<br><br>&nbsp;&nbsp;&nbsp;https</span><span style="color: #FF0000; ">:</span><span style="color: #000080; font-style: italic; ">//rapidapi.com/collection/list-of-free-apis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div><span>&nbsp;&nbsp;&nbsp;https</span><span style="color: #FF0000; ">:</span><span style="color: #000080; font-style: italic; ">//wiki.delphi-jedi.org/wiki/JCL_Help:Execute@string@string@Boolean@PBoolean</span></div><div><span>&nbsp;&nbsp;&nbsp;https</span><span style="color: #FF0000; ">:</span><span style="color: #000080; font-style: italic; ">//docs.microsoft.com/en-us/windows/win32/debug/system-error-codes--0-499-<br></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>GETDOSOutput</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'cmd.exe&nbsp;/c&nbsp;wmic&nbsp;cpu&nbsp;get&nbsp;architecture'</span><span style="color: #FF0000; ">,</span><span style="color: #008080; ">'C:\'</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>GETDOSOutput</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'cmd.exe&nbsp;/c&nbsp;wmic&nbsp;cpu&nbsp;get&nbsp;name'</span><span style="color: #FF0000; ">,</span><span style="color: #008080; ">'C:\'</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//to&nbsp;monitor&nbsp;tcp&nbsp;spyware&nbsp;over&nbsp;PID&nbsp;-&nbsp;process&nbsp;ID</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;memo2</span><span style="color: #FF0000; ">.</span><span>setFocus</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">repeat</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>GETDOSOutput</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'cmd.exe&nbsp;/c&nbsp;netstat&nbsp;-o'</span><span style="color: #FF0000; ">,</span><span style="color: #008080; ">'C:\'</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memo2</span><span style="color: #FF0000; ">.</span><span>color</span><span style="color: #FF0000; ">:=</span><span>&nbsp;clsilver</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep</span><span style="color: #FF0000; ">(2000)</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memo2</span><span style="color: #FF0000; ">.</span><span>color</span><span style="color: #FF0000; ">:=</span><span>&nbsp;clyellow</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">until</span><span>&nbsp;isKeyPressed</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;memo2</span><span style="color: #FF0000; ">.</span><span>color</span><span style="color: #FF0000; ">:=</span><span>&nbsp;clwhite</span><span style="color: #FF0000; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #FF0000; ">(</span><span>SysErrorMessage</span><span style="color: #FF0000; ">(</span><span>GetLastError</span><span style="color: #FF0000; ">))<br></span></div><div><span>Passwort&nbsp;checker</span><span style="color: #FF0000; ">?</span><span>&nbsp;https</span><span style="color: #FF0000; ">:</span><span style="color: #000080; font-style: italic; ">//haveibeenpwned.com</span></div><div><span>https</span><span style="color: #FF0000; ">:</span><span style="color: #000080; font-style: italic; ">//dnslytics.com/spf-lookup&nbsp;&nbsp;<br></span></div><div><span style="color: #000080; font-weight: bold; ">procedure</span><span>&nbsp;RunDosInMemo</span><span style="color: #FF0000; ">(</span><span>DosApp</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span><span>&nbsp;AMemo</span><span style="color: #FF0000; ">:</span><span>TMemo</span><span style="color: #FF0000; ">);</span></div><div><span style="color: #000080; font-weight: bold; ">const</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;READ_BUFFER_SIZE&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #FF0000; ">2400;</span></div><div><span style="color: #000080; font-weight: bold; ">var</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Security</span><span style="color: #FF0000; ">:</span><span>&nbsp;TSecurityAttributes</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;readableEndOfPipe</span><span style="color: #FF0000; ">,</span><span>&nbsp;writeableEndOfPipe</span><span style="color: #FF0000; ">:</span><span>&nbsp;THandle</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;start</span><span style="color: #FF0000; ">:</span><span>&nbsp;TStartUpInfo</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;ProcessInfo</span><span style="color: #FF0000; ">:</span><span>&nbsp;TProcessInformation</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Buffer</span><span style="color: #FF0000; ">:</span><span>&nbsp;PAnsiChar</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;BytesRead</span><span style="color: #FF0000; ">,</span><span>&nbsp;AppRunning</span><span style="color: #FF0000; ">:</span><span>&nbsp;DWORD</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Security</span><span style="color: #FF0000; ">.</span><span>nLength&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;SizeOf</span><span style="color: #FF0000; ">(</span><span>TSecurityAttributes</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Security</span><span style="color: #FF0000; ">.</span><span>bInheritHandle&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;True</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Security</span><span style="color: #FF0000; ">.</span><span>lpSecurityDescriptor&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">nil</span><span style="color: #FF0000; ">;<br></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">if</span><span>&nbsp;CreatePipe</span><span style="color: #FF0000; ">(</span><span style="color: #000080; font-style: italic; ">{var}</span><span>readableEndOfPipe</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">{var}</span><span>writeableEndOfPipe</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #FF0000; ">@</span><span>Security</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #FF0000; ">0)</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">then</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Buffer&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;AllocMem</span><span style="color: #FF0000; ">(</span><span>READ_BUFFER_SIZE</span><span style="color: #FF0000; ">+1);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FillChar</span><span style="color: #FF0000; ">(</span><span>Start</span><span style="color: #FF0000; ">,</span><span>&nbsp;Sizeof</span><span style="color: #FF0000; ">(</span><span>Start</span><span style="color: #FF0000; ">),</span><span>&nbsp;</span><span style="color: #0066CC; text-decoration: underline; ">#0</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start</span><span style="color: #FF0000; ">.</span><span>cb&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;SizeOf</span><span style="color: #FF0000; ">(</span><span>start</span><span style="color: #FF0000; ">);<br></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;Set&nbsp;up&nbsp;members&nbsp;of&nbsp;the&nbsp;STARTUPINFO&nbsp;structure.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;This&nbsp;structure&nbsp;specifies&nbsp;the&nbsp;STDIN&nbsp;and&nbsp;STDOUT&nbsp;handles&nbsp;for&nbsp;redirection.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;-&nbsp;Redirect&nbsp;the&nbsp;output&nbsp;and&nbsp;error&nbsp;to&nbsp;the&nbsp;writeable&nbsp;end&nbsp;of&nbsp;our&nbsp;pipe.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;-&nbsp;We&nbsp;must&nbsp;still&nbsp;supply&nbsp;a&nbsp;valid&nbsp;StdInput&nbsp;handle&nbsp;(because&nbsp;we&nbsp;used&nbsp;STARTF_USESTDHANDLES&nbsp;to&nbsp;swear&nbsp;that&nbsp;all&nbsp;three&nbsp;handles&nbsp;will&nbsp;be&nbsp;valid)</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start</span><span style="color: #FF0000; ">.</span><span>dwFlags&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;start</span><span style="color: #FF0000; ">.</span><span>dwFlags&nbsp;</span><span style="color: #000080; font-weight: bold; ">or</span><span>&nbsp;STARTF_USESTDHANDLES</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start</span><span style="color: #FF0000; ">.</span><span>hStdInput&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;GetStdHandle</span><span style="color: #FF0000; ">(</span><span>STD_INPUT_HANDLE</span><span style="color: #FF0000; ">);</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//we're&nbsp;not&nbsp;redirecting&nbsp;stdInput;&nbsp;but&nbsp;we&nbsp;still&nbsp;have&nbsp;to&nbsp;give&nbsp;it&nbsp;a&nbsp;valid&nbsp;handle</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start</span><span style="color: #FF0000; ">.</span><span>hStdOutput&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;writeableEndOfPipe</span><span style="color: #FF0000; ">;</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//we&nbsp;give&nbsp;the&nbsp;writeable&nbsp;end&nbsp;of&nbsp;the&nbsp;pipe&nbsp;to&nbsp;the&nbsp;child&nbsp;process;&nbsp;we&nbsp;read&nbsp;from&nbsp;the&nbsp;readable&nbsp;end</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start</span><span style="color: #FF0000; ">.</span><span>hStdError&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;writeableEndOfPipe</span><span style="color: #FF0000; ">;<br></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//We&nbsp;can&nbsp;also&nbsp;choose&nbsp;to&nbsp;say&nbsp;that&nbsp;the&nbsp;wShowWindow&nbsp;member&nbsp;contains&nbsp;a&nbsp;value.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//In&nbsp;our&nbsp;case&nbsp;we&nbsp;want&nbsp;to&nbsp;force&nbsp;the&nbsp;console&nbsp;window&nbsp;to&nbsp;be&nbsp;hidden.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start</span><span style="color: #FF0000; ">.</span><span>dwFlags&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;start</span><span style="color: #FF0000; ">.</span><span>dwFlags&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;STARTF_USESHOWWINDOW</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start</span><span style="color: #FF0000; ">.</span><span>wShowWindow&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;SW_HIDE</span><span style="color: #FF0000; ">;<br></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;Don't&nbsp;forget&nbsp;to&nbsp;set&nbsp;up&nbsp;members&nbsp;of&nbsp;the&nbsp;PROCESS_INFORMATION&nbsp;structure.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessInfo&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">Default</span><span style="color: #FF0000; ">(</span><span>TProcessInformation</span><span style="color: #FF0000; ">);<br></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//WARNING:&nbsp;The&nbsp;unicode&nbsp;version&nbsp;of&nbsp;CreateProcess&nbsp;(CreateProcessW)&nbsp;can&nbsp;modify&nbsp;the&nbsp;command-line&nbsp;&quot;DosApp&quot;&nbsp;string.&nbsp;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//Therefore&nbsp;&quot;DosApp&quot;&nbsp;cannot&nbsp;be&nbsp;a&nbsp;pointer&nbsp;to&nbsp;read-only&nbsp;memory,&nbsp;or&nbsp;an&nbsp;ACCESS_VIOLATION&nbsp;will&nbsp;occur.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//We&nbsp;can&nbsp;ensure&nbsp;it's&nbsp;not&nbsp;read-only&nbsp;with&nbsp;the&nbsp;RTL&nbsp;function:&nbsp;UniqueString</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UniqueString</span><span style="color: #FF0000; ">(</span><span style="color: #000080; font-style: italic; ">{var}</span><span>DosApp</span><span style="color: #FF0000; ">);<br></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">if</span><span>&nbsp;CreateProcess</span><span style="color: #FF0000; ">(</span><span style="color: #000080; font-weight: bold; ">nil</span><span style="color: #FF0000; ">,</span><span>&nbsp;PChar</span><span style="color: #FF0000; ">(</span><span>DosApp</span><span style="color: #FF0000; ">),</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">nil</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">nil</span><span style="color: #FF0000; ">,</span><span>&nbsp;True</span><span style="color: #FF0000; ">,</span><span>&nbsp;NORMAL_PRIORITY_CLASS</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">nil</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">nil</span><span style="color: #FF0000; ">,</span><span>&nbsp;start</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">{var}</span><span>ProcessInfo</span><span style="color: #FF0000; ">)</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">then</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//Wait&nbsp;for&nbsp;the&nbsp;application&nbsp;to&nbsp;terminate,&nbsp;as&nbsp;it&nbsp;writes&nbsp;it's&nbsp;output&nbsp;to&nbsp;the&nbsp;pipe.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//WARNING:&nbsp;If&nbsp;the&nbsp;console&nbsp;app&nbsp;outputs&nbsp;more&nbsp;than&nbsp;2400&nbsp;bytes&nbsp;(ReadBuffer),</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//it&nbsp;will&nbsp;block&nbsp;on&nbsp;writing&nbsp;to&nbsp;the&nbsp;pipe&nbsp;and&nbsp;*never*&nbsp;close.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">repeat</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Apprunning&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;WaitForSingleObject</span><span style="color: #FF0000; ">(</span><span>ProcessInfo</span><span style="color: #FF0000; ">.</span><span>hProcess</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #FF0000; ">100);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Application</span><span style="color: #FF0000; ">.</span><span>ProcessMessages</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">until</span><span>&nbsp;</span><span style="color: #FF0000; ">(</span><span>Apprunning&nbsp;</span><span style="color: #FF0000; ">&lt;&gt;</span><span>&nbsp;WAIT_TIMEOUT</span><span style="color: #FF0000; ">);<br></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//Read&nbsp;the&nbsp;contents&nbsp;of&nbsp;the&nbsp;pipe&nbsp;out&nbsp;of&nbsp;the&nbsp;readable&nbsp;end</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//WARNING:&nbsp;if&nbsp;the&nbsp;console&nbsp;app&nbsp;never&nbsp;writes&nbsp;anything&nbsp;to&nbsp;the&nbsp;StdOutput,&nbsp;then&nbsp;ReadFile&nbsp;will&nbsp;block&nbsp;and&nbsp;never&nbsp;return</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">repeat</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BytesRead&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadFile</span><span style="color: #FF0000; ">(</span><span>readableEndOfPipe</span><span style="color: #FF0000; ">,</span><span>&nbsp;Buffer</span><span style="color: #FF0000; ">[0],</span><span>&nbsp;READ_BUFFER_SIZE</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">{var}</span><span>BytesRead</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">nil</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Buffer</span><span style="color: #FF0000; ">[</span><span>BytesRead</span><span style="color: #FF0000; ">]:=</span><span>&nbsp;</span><span style="color: #0066CC; text-decoration: underline; ">#0</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OemToAnsi</span><span style="color: #FF0000; ">(</span><span>Buffer</span><span style="color: #FF0000; ">,</span><span>Buffer</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AMemo</span><span style="color: #FF0000; ">.</span><span>Text&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;AMemo</span><span style="color: #FF0000; ">.</span><span>text&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;String</span><span style="color: #FF0000; ">(</span><span>Buffer</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">until</span><span>&nbsp;</span><span style="color: #FF0000; ">(</span><span>BytesRead&nbsp;</span><span style="color: #FF0000; ">&lt;</span><span>&nbsp;READ_BUFFER_SIZE</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FreeMem</span><span style="color: #FF0000; ">(</span><span>Buffer</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CloseHandle</span><span style="color: #FF0000; ">(</span><span>ProcessInfo</span><span style="color: #FF0000; ">.</span><span>hProcess</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CloseHandle</span><span style="color: #FF0000; ">(</span><span>ProcessInfo</span><span style="color: #FF0000; ">.</span><span>hThread</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CloseHandle</span><span style="color: #FF0000; ">(</span><span>readableEndOfPipe</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CloseHandle</span><span style="color: #FF0000; ">(</span><span>writeableEndOfPipe</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-weight: bold; ">procedure</span><span>&nbsp;TForm1</span><span style="color: #FF0000; ">.</span><span>Button1Click</span><span style="color: #FF0000; ">(</span><span>Sender</span><span style="color: #FF0000; ">:</span><span>&nbsp;TObject</span><span style="color: #FF0000; ">);</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">{button&nbsp;1&nbsp;code}</span></div><div><span>&nbsp;&nbsp;&nbsp;RunDosInMemo</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'chkdsk.exe&nbsp;c:\'</span><span style="color: #FF0000; ">,</span><span>Memo1</span><span style="color: #FF0000; ">);</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;<br></span></div><div><span>CL</span><span style="color: #FF0000; ">.</span><span>AddDelphiFunction</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'procedure&nbsp;RunDosInMemo(DosApp:&nbsp;string;&nbsp;AMemo:TMemo);'</span><span style="color: #FF0000; ">);</span></div><div><span>ShellExecute</span><span style="color: #FF0000; ">(0,</span><span>&nbsp;</span><span style="color: #008080; ">'open'</span><span style="color: #FF0000; ">,</span><span>&nbsp;Pchar</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'DocumentName.pdf'</span><span style="color: #FF0000; ">),</span><span>&nbsp;</span><span style="color: #008080; ">''</span><span style="color: #FF0000; ">,</span><span>&nbsp;</span><span style="color: #008080; ">''</span><span style="color: #FF0000; ">,</span><span>&nbsp;SW_SHOWNORMAL</span><span style="color: #FF0000; ">);<br></span></div><div><span>Zahlenschloss&nbsp;</span><span style="color: #FF0000; ">4</span><span>&nbsp;Stellen&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">-</span><span>&nbsp;</span><span style="color: #FF0000; ">10</span><span>&nbsp;Ziffern&nbsp;&nbsp;</span><span style="color: #FF0000; ">&gt;</span><span>&nbsp;</span><span style="color: #FF0000; ">10^4</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">80^4</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">90^6</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">0234</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">0023</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">4321</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tweets&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">128^180</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Universelle&nbsp;Bibliothek&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #00FF00; ">1.9851555241898344196176987318733e+379</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">128^4</span><span>&nbsp;schlechter&nbsp;als&nbsp;</span><span style="color: #FF0000; ">10^20</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wieviel&nbsp;Permutationen</span><span style="color: #FF0000; ">:</span><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #FF0000; ">10000<br><br></span></div><div><span>work&nbsp;under&nbsp;Windows&nbsp;</span><span style="color: #FF0000; ">7</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">and</span><span>&nbsp;</span><span style="color: #FF0000; ">8,</span><span>&nbsp;which&nbsp;would&nbsp;start&nbsp;the&nbsp;Acrobat&nbsp;Reader&nbsp;</span><span style="color: #000080; font-weight: bold; ">and</span><span>&nbsp;open&nbsp;the&nbsp;</span><span style="color: #000080; font-weight: bold; ">file</span><span>&nbsp;but&nbsp;under<br>Windows&nbsp;</span><span style="color: #FF0000; ">10</span><span>&nbsp;this&nbsp;no&nbsp;longer&nbsp;</span><span style="color: #000080; font-weight: bold; ">is</span><span>&nbsp;the&nbsp;</span><span style="color: #000080; font-weight: bold; ">case</span><span style="color: #FF0000; ">.</span><span>&nbsp;So&nbsp;the&nbsp;next&nbsp;step&nbsp;was&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;update&nbsp;the&nbsp;call&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;use&nbsp;ShellExecuteEX&nbsp;instead</span><span style="color: #FF0000; ">.</span></div><div><span>ShellInfo&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">Default</span><span style="color: #FF0000; ">(</span><span>TShellExecuteInfo</span><span style="color: #FF0000; ">);</span></div><div><span>ShellInfo</span><span style="color: #FF0000; ">.</span><span>cbSize&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;SizeOf</span><span style="color: #FF0000; ">(</span><span>TShellExecuteInfo</span><span style="color: #FF0000; ">);</span></div><div><span>ShellInfo</span><span style="color: #FF0000; ">.</span><span>lpFile&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;PChar</span><span style="color: #FF0000; ">(</span><span>Current_Client_Documents&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;FileName&nbsp;</span><span style="color: #FF0000; ">+</span><span style="color: #008080; ">'.pdf'</span><span style="color: #FF0000; ">);</span></div><div><span>ShellInfo</span><span style="color: #FF0000; ">.</span><span>nShow&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;SW_SHOWNORMAL</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-weight: bold; ">try</span></div><div><span>ShellExecuteEx</span><span style="color: #FF0000; ">(@</span><span>ShellInfo</span><span style="color: #FF0000; ">);<br></span></div><div><span>The&nbsp;actual&nbsp;code&nbsp;will&nbsp;prepare&nbsp;the&nbsp;</span><span style="color: #000080; font-weight: bold; ">Object</span><span>&nbsp;ShellInfo&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;contain&nbsp;all&nbsp;</span><span style="color: #000080; font-weight: bold; ">of</span><span>&nbsp;the&nbsp;necessary&nbsp;data&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;start&nbsp;<br>up&nbsp;the&nbsp;Acrobat&nbsp;Reader&nbsp;</span><span style="color: #000080; font-weight: bold; ">and</span><span>&nbsp;display&nbsp;the&nbsp;generated&nbsp;PDF</span><span style="color: #FF0000; ">.<br></span></div><div><span>&nbsp;mX4&nbsp;executed</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">30/08/2022</span><span>&nbsp;</span><span style="color: #FF0000; ">16:07:02</span><span>&nbsp;&nbsp;Runtime</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">0:0:</span><span style="color: #00FF00; ">2.369</span><span>&nbsp;&nbsp;Memload</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">45%</span><span>&nbsp;use<br>&nbsp;mX4&nbsp;executed</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">07/09/2022</span><span>&nbsp;</span><span style="color: #FF0000; ">09:07:56</span><span>&nbsp;&nbsp;Runtime</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">0:0:</span><span style="color: #00FF00; ">9.906</span><span>&nbsp;&nbsp;Memload</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">45%</span><span>&nbsp;use<br>&nbsp;mX4&nbsp;executed</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">07/09/2022</span><span>&nbsp;</span><span style="color: #FF0000; ">10:23:00</span><span>&nbsp;&nbsp;Runtime</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">0:0:</span><span style="color: #00FF00; ">9.134</span><span>&nbsp;&nbsp;Memload</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">45%</span><span>&nbsp;use</span></div><div><span style="color: #FF0000; ">[</span><span>PASS</span><span style="color: #FF0000; ">]</span><span>&nbsp;Test</span><span style="color: #FF0000; ">:</span><span>&nbsp;Github&nbsp;readme</span><span style="color: #FF0000; ">.</span><span>md&nbsp;content&nbsp;ex</span><span style="color: #FF0000; ">.</span><span>&nbsp;</span><span style="color: #FF0000; ">99</span></div><div><span>&nbsp;mX5</span><span style="color: #FF0000; ">  </span><span>&nbsp;executed</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">18/06/2024</span><span>&nbsp;</span><span style="color: #FF0000; ">14:38:51</span><span>&nbsp;&nbsp;Runtime</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">0:0:</span><span style="color: #00FF00; ">3.830</span><span>&nbsp;&nbsp;Memload</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">73%</span><span>&nbsp;use&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;<br>https</span><span style="color: #FF0000; ">:</span><span style="color: #000080; font-style: italic; ">//my6.code.blog/2022/09/02/webpostdata/<br></span></div><div><span>Locomotive&nbsp;</span><span style="color: #FF0000; ">√©</span><span>lectrique&nbsp;BB26023&nbsp;livr</span><span style="color: #FF0000; ">√©</span><span>e&nbsp;Corail&nbsp;logo&nbsp;Beffara&nbsp;</span><span style="color: #FF0000; ">(</span><span>dit&nbsp;nouille</span><span style="color: #FF0000; ">).</span><span>&nbsp;<br>Immatriculation&nbsp;</span><span style="color: #FF0000; ">:</span><span>&nbsp;BB26023</span><span style="color: #FF0000; ">.</span><span>&nbsp;</span><span style="color: #FF0000; ">324712109726</span><span>&nbsp;JOUEF&nbsp;BB26023&nbsp;LOGO&nbsp;beffara&nbsp;ep&nbsp;v&nbsp;sncf&nbsp;oh&nbsp;</span><span style="color: #FF0000; ">1/87</span><span>&nbsp;</span><span style="color: #FF0000; ">-</span><span>&nbsp;</span><span style="color: #FF0000; ">¬£</span><span style="color: #00FF00; ">146.67.<br></span></div><div><span>Interpreters&nbsp;usually&nbsp;take&nbsp;less&nbsp;amount&nbsp;</span><span style="color: #000080; font-weight: bold; ">of</span><span>&nbsp;time&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;analyze&nbsp;the&nbsp;source&nbsp;code</span><span style="color: #FF0000; ">.</span><span>&nbsp;However</span><span style="color: #FF0000; ">,</span><span>&nbsp;<br>the&nbsp;overall&nbsp;execution&nbsp;time&nbsp;</span><span style="color: #000080; font-weight: bold; ">is</span><span>&nbsp;comparatively&nbsp;slower&nbsp;than&nbsp;compilers</span><span style="color: #FF0000; ">.</span><span>&nbsp;<br>A&nbsp;compiler&nbsp;scans&nbsp;the&nbsp;entire&nbsp;</span><span style="color: #000080; font-weight: bold; ">program</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">and</span><span>&nbsp;translates&nbsp;it&nbsp;from&nbsp;</span><span style="color: #000080; font-weight: bold; ">object</span><span>&nbsp;code&nbsp;</span><span style="color: #000080; font-weight: bold; ">as</span><span>&nbsp;a&nbsp;whole&nbsp;into&nbsp;machine&nbsp;code</span><span style="color: #FF0000; ">.</span><span>&nbsp;<br>&nbsp;&nbsp;</span></div><div><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;_______&nbsp;________&quot;,&quot;common&quot;:&quot;______&quot;}<br>{&quot;official&quot;:&quot;Kengevredad&nbsp;Suis&quot;,&quot;common&quot;:&quot;Suis&quot;}<br>{&quot;official&quot;:&quot;_v√Ωcarsk√°&nbsp;konfederace&quot;,&quot;common&quot;:&quot;_v√Ωcarsko&quot;}<br>{&quot;official&quot;:&quot;Swiss&nbsp;Confederation&quot;,&quot;common&quot;:&quot;Switzerland&quot;}<br>{&quot;official&quot;:&quot;Schweizerische&nbsp;Eidgenossenschaft&quot;,&quot;common&quot;:&quot;Schweiz&quot;}<br>{&quot;official&quot;:&quot;_veitsi&nbsp;Konf√∂deratsioon&quot;,&quot;common&quot;:&quot;_veits&quot;}<br>{&quot;official&quot;:&quot;Sveitsin&nbsp;valaliitto&quot;,&quot;common&quot;:&quot;Sveitsi&quot;}<br>{&quot;official&quot;:&quot;Conf√©d√©ration&nbsp;suisse&quot;,&quot;common&quot;:&quot;Suisse&quot;}<br>{&quot;official&quot;:&quot;_vicarska&nbsp;Konfederacija&quot;,&quot;common&quot;:&quot;_vicarska&quot;}<br>{&quot;official&quot;:&quot;Sv√°jc&quot;,&quot;common&quot;:&quot;Sv√°jc&quot;}<br>{&quot;official&quot;:&quot;Confederazione&nbsp;svizzera&quot;,&quot;common&quot;:&quot;Svizzera&quot;}<br>{&quot;official&quot;:&quot;_____&quot;,&quot;common&quot;:&quot;___&quot;}<br>{&quot;official&quot;:&quot;___&nbsp;__&quot;,&quot;common&quot;:&quot;___&quot;}<br>{&quot;official&quot;:&quot;Zwitserse&nbsp;Confederatie&quot;,&quot;common&quot;:&quot;Zwitserland&quot;}<br>{&quot;official&quot;:&quot;__________&nbsp;_____&quot;,&quot;common&quot;:&quot;_____&quot;}<br>{&quot;official&quot;:&quot;Konfederacja&nbsp;Szwajcarska&quot;,&quot;common&quot;:&quot;Szwajcaria&quot;}<br>{&quot;official&quot;:&quot;Confedera√ß√£o&nbsp;Su√≠√ßa&quot;,&quot;common&quot;:&quot;Su√≠√ßa&quot;}<br>{&quot;official&quot;:&quot;___________&nbsp;____________&quot;,&quot;common&quot;:&quot;_________&quot;}<br>{&quot;official&quot;:&quot;_vaj_iarska&nbsp;konfeder√°cia&quot;,&quot;common&quot;:&quot;_vaj_iarsko&quot;}<br>{&quot;official&quot;:&quot;Confederaci√≥n&nbsp;Suiza&quot;,&quot;common&quot;:&quot;Suiza&quot;}<br>{&quot;official&quot;:&quot;__________&nbsp;_____________&quot;,&quot;common&quot;:&quot;__________&quot;}<br>{&quot;official&quot;:&quot;Schweiziska&nbsp;edsf√∂rbundet&quot;,&quot;common&quot;:&quot;Schweiz&quot;}<br>{&quot;official&quot;:&quot;_svi√ßre&nbsp;Konfederasyonu&quot;,&quot;common&quot;:&quot;_svi√ßre&quot;}<br>{&quot;official&quot;:&quot;_____&nbsp;&nbsp;_____&quot;,&quot;common&quot;:&quot;__________&quot;}<br>{&quot;official&quot;:&quot;____&quot;,&quot;common&quot;:&quot;__&quot;}</span></div><div><span>len&nbsp;names&nbsp;borders</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">5<br></span></div><div><span>ara</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;ÿßŸÑÿßÿ™ÿ≠ÿßÿØ&nbsp;ÿßŸÑÿ≥ŸàŸäÿ≥ÿ±Ÿä&quot;,&quot;common&quot;:&quot;ÿ≥ŸàŸäÿ≥ÿ±ÿß&quot;}</span></div><div><span>bre</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Kengevredad&nbsp;Suis&quot;,&quot;common&quot;:&quot;Suis&quot;}</span></div><div><span>ces</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;≈†v√Ωcarsk√°&nbsp;konfederace&quot;,&quot;common&quot;:&quot;≈†v√Ωcarsko&quot;}</span></div><div><span>cym</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Swiss&nbsp;Confederation&quot;,&quot;common&quot;:&quot;Switzerland&quot;}</span></div><div><span>deu</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Schweizerische&nbsp;Eidgenossenschaft&quot;,&quot;common&quot;:&quot;Schweiz&quot;}</span></div><div><span>est</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;≈†veitsi&nbsp;Konf√∂deratsioon&quot;,&quot;common&quot;:&quot;≈†veits&quot;}</span></div><div><span>fin</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Sveitsin&nbsp;valaliitto&quot;,&quot;common&quot;:&quot;Sveitsi&quot;}</span></div><div><span>fra</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Conf√©d√©ration&nbsp;suisse&quot;,&quot;common&quot;:&quot;Suisse&quot;}</span></div><div><span>hrv</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;≈°vicarska&nbsp;Konfederacija&quot;,&quot;common&quot;:&quot;≈†vicarska&quot;}</span></div><div><span>hun</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Sv√°jc&quot;,&quot;common&quot;:&quot;Sv√°jc&quot;}</span></div><div><span>ita</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Confederazione&nbsp;svizzera&quot;,&quot;common&quot;:&quot;Svizzera&quot;}</span></div><div><span>jpn</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;„Çπ„Ç§„ÇπÈÄ£ÈÇ¶&quot;,&quot;common&quot;:&quot;„Çπ„Ç§„Çπ&quot;}</span></div><div><span>nld</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Zwitserse&nbsp;Confederatie&quot;,&quot;common&quot;:&quot;Zwitserland&quot;}</span></div><div><span>per</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;⁄©ŸÜŸÅÿØÿ±ÿßÿ≥€åŸàŸÜ&nbsp;ÿ≥Ÿàÿ¶€åÿ≥&quot;,&quot;common&quot;:&quot;ÿ≥Ÿàÿ¶€åÿ≥&quot;}</span></div><div><span>pol</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Konfederacja&nbsp;Szwajcarska&quot;,&quot;common&quot;:&quot;Szwajcaria&quot;}</span></div><div><span>por</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Confedera√ß√£o&nbsp;Su√≠√ßa&quot;,&quot;common&quot;:&quot;Su√≠√ßa&quot;}</span></div><div><span>tur</span><span style="color: #FF0000; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;ƒ∞svi√ßre&nbsp;Konfederasyonu&quot;,&quot;common&quot;:&quot;ƒ∞svi√ßre&quot;}</span></div><div><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;import&nbsp;json<br><br>json_data&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #008080; ">'''</span></div><div><span style="color: #FF0000; ">[</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;√ò¬ß√ô‚Äû√ò¬ß√ò¬™√ò√ò¬ß√ò¬Ø&nbsp;√ò¬ß√ô‚Äû√ò¬≥√ôÀÜ√ô≈†√ò¬≥√ò¬±√ô≈†&quot;,&quot;common&quot;:&quot;√ò¬≥√ôÀÜ√ô≈†√ò¬≥√ò¬±√ò¬ß&quot;}</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Kengevredad&nbsp;Suis&quot;,&quot;common&quot;:&quot;Suis&quot;}</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;√Ö&nbsp;v√É¬Ωcarsk√É¬°&nbsp;konfederace&quot;,&quot;common&quot;:&quot;√Ö&nbsp;v√É¬Ωcarsko&quot;}</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Swiss&nbsp;Confederation&quot;,&quot;common&quot;:&quot;Switzerland&quot;}</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;√Ö&nbsp;veitsi&nbsp;Konf√É¬∂deratsioon&quot;,&quot;common&quot;:&quot;√Ö&nbsp;veits&quot;}</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Sveitsin&nbsp;valaliitto&quot;,&quot;common&quot;:&quot;Sveitsi&quot;}</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Conf√É¬©d√É¬©ration&nbsp;suisse&quot;,&quot;common&quot;:&quot;Suisse&quot;}</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;√Ö¬°vicarska&nbsp;Konfederacija&quot;,&quot;common&quot;:&quot;√Ö&nbsp;vicarska&quot;}</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Sv√É¬°jc&quot;,&quot;common&quot;:&quot;Sv√É¬°jc&quot;}</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Confederazione&nbsp;svizzera&quot;,&quot;common&quot;:&quot;Svizzera&quot;}</span></div><div><span style="color: #FF0000; ">]</span></div><div><span style="color: #008080; ">'''<br></span></div><div><span style="color: #0066CC; text-decoration: underline; ">#</span><span>&nbsp;Decoding&nbsp;JSON&nbsp;data&nbsp;</span><span style="color: #000080; font-weight: bold; ">with</span><span>&nbsp;correct&nbsp;UTF</span><span style="color: #FF0000; ">-8</span><span>&nbsp;handling<br>decoded_data&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;json</span><span style="color: #FF0000; ">.</span><span>loads</span><span style="color: #FF0000; ">(</span><span>json_data</span><span style="color: #FF0000; ">)<br></span></div><div><span style="color: #000080; font-weight: bold; ">for</span><span>&nbsp;entry&nbsp;</span><span style="color: #000080; font-weight: bold; ">in</span><span>&nbsp;decoded_data</span><span style="color: #FF0000; ">:</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">for</span><span>&nbsp;key</span><span style="color: #FF0000; ">,</span><span>&nbsp;value&nbsp;</span><span style="color: #000080; font-weight: bold; ">in</span><span>&nbsp;entry</span><span style="color: #FF0000; ">.</span><span>items</span><span style="color: #FF0000; ">():</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print</span><span style="color: #FF0000; ">(</span><span>f</span><span style="color: #FF0000; ">&quot;</span><span style="color: #000080; font-style: italic; ">{key}</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">{value}</span><span style="color: #FF0000; ">&quot;)<br></span></div><div><span style="color: #0066CC; text-decoration: underline; ">#</span><span>&nbsp;Correctly&nbsp;display&nbsp;the&nbsp;JSON&nbsp;data<br><br></span></div><div><span style="color: #000080; font-weight: bold; ">uses</span></div><div><span>&nbsp;&nbsp;SysUtils</span><span style="color: #FF0000; ">,</span><span>&nbsp;IdHTTP</span><span style="color: #FF0000; ">,</span><span>&nbsp;DateUtils</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-weight: bold; ">function</span><span>&nbsp;GetTimeFromServer</span><span style="color: #FF0000; ">(</span><span style="color: #000080; font-weight: bold; ">const</span><span>&nbsp;ServerList</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">array</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">of</span><span>&nbsp;string</span><span style="color: #FF0000; ">):</span><span>&nbsp;TDateTime</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">var</span></div><div><span>&nbsp;&nbsp;i</span><span style="color: #FF0000; ">:</span><span>&nbsp;Integer</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;IdHTTP</span><span style="color: #FF0000; ">:</span><span>&nbsp;TIdHTTP</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;Response</span><span style="color: #FF0000; ">:</span><span>&nbsp;string</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;IdHTTP&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;TIdHTTP</span><span style="color: #FF0000; ">.</span><span>Create</span><span style="color: #FF0000; ">(</span><span style="color: #000080; font-weight: bold; ">nil</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">for</span><span>&nbsp;i&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">to</span><span>&nbsp;High</span><span style="color: #FF0000; ">(</span><span>ServerList</span><span style="color: #FF0000; ">)</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;Versuchen,&nbsp;die&nbsp;Zeit&nbsp;vom&nbsp;aktuellen&nbsp;Server&nbsp;abzurufen</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Response&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;IdHTTP</span><span style="color: #FF0000; ">.</span><span>Get</span><span style="color: #FF0000; ">(</span><span>ServerList</span><span style="color: #FF0000; ">[</span><span>i</span><span style="color: #FF0000; ">]);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;Verarbeiten&nbsp;der&nbsp;Antwort,&nbsp;um&nbsp;die&nbsp;Zeit&nbsp;zu&nbsp;extrahieren&nbsp;(Annahme:&nbsp;Zeit&nbsp;ist&nbsp;direkt&nbsp;im&nbsp;Response)</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;StrToDateTime</span><span style="color: #FF0000; ">(</span><span>Response</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit</span><span style="color: #FF0000; ">;</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;Erfolg,&nbsp;Funktion&nbsp;beenden</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">except</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">on</span><span>&nbsp;E</span><span style="color: #FF0000; ">:</span><span>&nbsp;Exception&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;Fehler&nbsp;beim&nbsp;Abrufen&nbsp;der&nbsp;Zeit,&nbsp;zum&nbsp;n√§chsten&nbsp;Server&nbsp;weitergehen</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">if</span><span>&nbsp;i&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;High</span><span style="color: #FF0000; ">(</span><span>ServerList</span><span style="color: #FF0000; ">)</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">then</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">raise</span><span>&nbsp;Exception</span><span style="color: #FF0000; ">.</span><span>Create</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'Kein&nbsp;Zeitserver&nbsp;erreichbar'</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">finally</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;IdHTTP</span><span style="color: #FF0000; ">.</span><span>Free</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;<br></span></div><div><span style="color: #000080; font-style: italic; ">//&nbsp;Beispielaufruf&nbsp;der&nbsp;Funktion</span></div><div><span style="color: #000080; font-weight: bold; ">var</span></div><div><span>&nbsp;&nbsp;TimeServers</span><span style="color: #FF0000; ">:</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">array</span><span style="color: #FF0000; ">[0..3]</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">of</span><span>&nbsp;string&nbsp;</span><span style="color: #FF0000; ">=</span><span>&nbsp;</span><span style="color: #FF0000; ">(</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'http://worldtimeapi.org/api/timezone/Etc/UTC'</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'http://worldclockapi.com/api/json/utc/now'</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'http://timeapi.io/api/Time/current/zone?timeZone=UTC'</span><span style="color: #FF0000; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'http://api.timezonedb.com/v2.1/get-time-zone?key=YOUR_API_KEY&amp;format=json&amp;by=zone&amp;zone=UTC'</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;CurrentTime</span><span style="color: #FF0000; ">:</span><span>&nbsp;TDateTime</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;CurrentTime&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;GetTimeFromServer</span><span style="color: #FF0000; ">(</span><span>TimeServers</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;ShowMessage</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'Aktuelle&nbsp;Zeit:&nbsp;'</span><span>&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;DateTimeToStr</span><span style="color: #FF0000; ">(</span><span>CurrentTime</span><span style="color: #FF0000; ">));</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">except</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">on</span><span>&nbsp;E</span><span style="color: #FF0000; ">:</span><span>&nbsp;Exception&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ShowMessage</span><span style="color: #FF0000; ">(</span><span style="color: #008080; ">'Fehler:&nbsp;'</span><span>&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;E</span><span style="color: #FF0000; ">.</span><span style="color: #000080; font-weight: bold; ">Message</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;<br></span></div><div><span>Antwort&nbsp;Kap</span><span style="color: #FF0000; ">.</span><span>&nbsp;</span><span style="color: #00FF00; ">4.1</span></div><div><span style="color: #000080; font-weight: bold; ">function</span><span>&nbsp;getJsonData</span><span style="color: #FF0000; ">(</span><span>JsonString</span><span style="color: #FF0000; ">:</span><span>&nbsp;String</span><span style="color: #FF0000; ">;</span><span>&nbsp;User</span><span style="color: #FF0000; ">:</span><span>&nbsp;String</span><span style="color: #FF0000; ">;</span><span>&nbsp;Field</span><span style="color: #FF0000; ">:</span><span>&nbsp;String</span><span style="color: #FF0000; ">):</span><span>&nbsp;String</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">var</span></div><div><span>&nbsp;&nbsp;JSonValue</span><span style="color: #FF0000; ">:</span><span>&nbsp;TJSonValue</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;JsonArray</span><span style="color: #FF0000; ">:</span><span>&nbsp;TJSONArray</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;ArrayElement</span><span style="color: #FF0000; ">:</span><span>&nbsp;TJSonValue</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;FoundValue</span><span style="color: #FF0000; ">:</span><span>&nbsp;TJSonValue</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;Result&nbsp;</span><span style="color: #FF0000; ">:=</span><span style="color: #008080; ">''</span><span style="color: #FF0000; ">;<br></span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;create&nbsp;TJSonObject&nbsp;from&nbsp;string</span></div><div><span>&nbsp;&nbsp;JsonValue&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;TJSonObject</span><span style="color: #FF0000; ">.</span><span>ParseJSONValue</span><span style="color: #FF0000; ">(</span><span>JsonString</span><span style="color: #FF0000; ">);<br></span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;get&nbsp;the&nbsp;array</span></div><div><span>&nbsp;&nbsp;JsonArray&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;JsonValue&nbsp;</span><span style="color: #000080; font-weight: bold; ">as</span><span>&nbsp;TJSONArray</span><span style="color: #FF0000; ">;<br></span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;iterate&nbsp;the&nbsp;array</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">for</span><span>&nbsp;ArrayElement&nbsp;</span><span style="color: #000080; font-weight: bold; ">in</span><span>&nbsp;JsonArray&nbsp;</span><span style="color: #000080; font-weight: bold; ">do</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FoundValue&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;ArrayElement</span><span style="color: #FF0000; ">.</span><span>FindValue</span><span style="color: #FF0000; ">(</span><span>User</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">if</span><span>&nbsp;FoundValue&nbsp;</span><span style="color: #FF0000; ">&lt;&gt;</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">nil</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">then</span><span>&nbsp;</span><span style="color: #000080; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;</span><span style="color: #FF0000; ">:=</span><span>&nbsp;ArrayElement</span><span style="color: #FF0000; ">.</span><span>GetValue</span><span style="color: #FF0000; ">&lt;</span><span>string</span><span style="color: #FF0000; ">&gt;(</span><span>User&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'.'</span><span>&nbsp;</span><span style="color: #FF0000; ">+</span><span>&nbsp;Field</span><span style="color: #FF0000; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;</span></div><div><span style="color: #000080; font-weight: bold; ">end</span><span style="color: #FF0000; ">;<br></span></div><div><span>https</span><span style="color: #FF0000; ">:</span><span style="color: #000080; font-style: italic; ">//stackoverflow.com/questions/46534011/delphi-parse-json-array-or-array<br></span></div><div><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;</span><br></div></div><!--EndFragment-->
</body>
</html>